{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ProgramCard.js\";\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProgramCard() {\n  const cardContent = [{\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\",\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2001\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\",\n    title: \"The Hobbit: The Desolation of Smaug\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2013\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\",\n    title: \"The Grinch\",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2000\"\n  }, {\n    image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\",\n    title: \"Sing\",\n    service: \"Netflix\",\n    genre: \"Family/Musical\",\n    year: \"2016\"\n  }, {\n    image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\",\n    title: \"Inside Out \",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2015\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\",\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2001\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\",\n    title: \"The Hobbit: The Desolation of Smaug\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2013\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\",\n    title: \"The Grinch\",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2000\"\n  }, {\n    image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\",\n    title: \"Sing\",\n    service: \"Netflix\",\n    genre: \"Family/Musical\",\n    year: \"2016\"\n  }, {\n    image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\",\n    title: \"Inside Out \",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2015\"\n  }];\n  /**\n   * References: \n   * To create individual cards: https://react-bootstrap.github.io/components/cards/ \n   * To populate each card with information from card content object: \n   *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\n   */\n\n  const renderCard = (card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '10rem'\n      },\n      className: \"pCard\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: card.image,\n        style: {\n          height: \"180px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            height: '0rem'\n          },\n          className: \"cardTitle\",\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            height: '0rem'\n          },\n          className: \"cardText\",\n          children: card.service\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            height: '0rem'\n          },\n          className: \"cardText\",\n          children: card.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            height: '0rem'\n          },\n          className: \"cardText\",\n          children: card.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"favBtn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: cardContent.map(renderCard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n_c = ProgramCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgramCard\");","map":{"version":3,"sources":["/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ProgramCard.js"],"names":["React","Card","Button","ProgramCard","cardContent","image","title","service","genre","year","renderCard","card","index","width","height","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport './Card.css'\n\nexport default function ProgramCard(){\n    const cardContent = [\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\", title: \"The Lord of the Rings: The Fellowship of the Ring\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2001\"}, \n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\", title: \"The Hobbit: The Desolation of Smaug\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2013\"}, \n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\", title: \"The Grinch\", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2000\"}, \n        {image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\", title: \"Sing\", service: \"Netflix\", genre: \"Family/Musical\", year:\"2016\"}, \n        {image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\", title: \"Inside Out \", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2015\"}, \n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\", title: \"The Lord of the Rings: The Fellowship of the Ring\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2001\"}, \n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\", title: \"The Hobbit: The Desolation of Smaug\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2013\"}, \n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\", title: \"The Grinch\", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2000\"}, \n        {image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\", title: \"Sing\", service: \"Netflix\", genre: \"Family/Musical\", year:\"2016\"}, \n        {image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\", title: \"Inside Out \", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2015\"}\n    ]; \n\n    /**\n     * References: \n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \n     * To populate each card with information from card content object: \n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\n     */\n    const renderCard = (card, index) => {\n        return (\n            <Card style={{ width: '10rem'}} key={index} className=\"pCard\">\n                <Card.Img variant=\"top\" src={card.image} style={{height: \"180px\"}}/>\n                <Card.Body>\n                    <Card.Text style={{height: '0rem'}} className=\"cardTitle\">{card.title}</Card.Text>\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.service}</Card.Text>\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.genre}</Card.Text>\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.year}</Card.Text>\n                    <Button className=\"favBtn\">+</Button>\n                    </Card.Body>\n            </Card>\n        ); \n    }; \n    return <div className=\"grid\">{cardContent.map(renderCard)}</div>; \n}; \n"]},"metadata":{},"sourceType":"module"}