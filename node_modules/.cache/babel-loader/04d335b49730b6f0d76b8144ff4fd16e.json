{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Subscriptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport Dashboard from '../Dashboard';\nimport SubCard from '../../cards/SubCard';\nimport AddServiceForm from '../../forms/AddServiceForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Subscriptions() {\n  _s();\n\n  //Need to pass in email of user logged in \n  var userEmail = 'michael.miller@email.com';\n  const [addServiceBtn, setAddServiceBtn] = useState(false);\n  const [userSubs, setUserSubs] = useState([]);\n  const [allServices, setAllServices] = useState([]);\n  useEffect(() => {\n    fetch('/services').then(response => response.json()).then(data => {\n      setAllServices(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`/usersubscriptions?Email=${userEmail}`).then(response => response.json()).then(data => {\n      setUserSubs(data);\n    });\n  }, []);\n  /**References: How to update UI when adding and removing services:  \n   *  * How to Call a Flask API in React: https://www.youtube.com/watch?v=06pWsB_hoD4\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pageHeader\",\n        children: \"My Subscriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddBtn, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setAddServiceBtn(true),\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SubCard, {\n      services: userSubs,\n      userEmail: userEmail,\n      onRemovedService: serviceRemoved => setUserSubs(userSubs.filter(service => service['Service_name'] != serviceRemoved))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddServiceForm, {\n      trigger: addServiceBtn,\n      setTrigger: setAddServiceBtn,\n      userEmail: userEmail,\n      userServices: userSubs,\n      allServices: allServices,\n      onAddedService: newService => setUserSubs(currentServices => [...currentServices, newService])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Subscriptions, \"9GbJiy3flmgTDGg6hVFA5R+b0dY=\");\n\n_c = Subscriptions;\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 70px;\n`;\n_c2 = Header;\nconst AddBtn = styled.div`\n    margin-left: 1000px; \n    margin-top: 10px;\n`;\n_c3 = AddBtn;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Subscriptions\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"AddBtn\");","map":{"version":3,"sources":["/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Subscriptions.js"],"names":["React","useState","useEffect","styled","Button","Dashboard","SubCard","AddServiceForm","Subscriptions","userEmail","addServiceBtn","setAddServiceBtn","userSubs","setUserSubs","allServices","setAllServices","fetch","then","response","json","data","serviceRemoved","filter","service","newService","currentServices","Header","div","AddBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC;AACA,MAAIC,SAAS,GAAG,0BAAhB;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CAAwBC,QAAQ,IAC5BA,QAAQ,CAACC,IAAT,EADJ,EACqBF,IADrB,CAC0BG,IAAI,IAAI;AAC1BL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KAHL;AAIH,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,KAAK,CAAE,4BAA2BP,SAAU,EAAvC,CAAL,CAA+CQ,IAA/C,CAAoDC,QAAQ,IACxDA,QAAQ,CAACC,IAAT,EADJ,EACqBF,IADrB,CAC0BG,IAAI,IAAI;AAC1BP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACH,KAHL;AAIH,GALQ,EAKN,EALM,CAAT;AAQA;AACJ;AACA;;AACI,sBACI;AAAA,4BACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,MAAD;AAAA,6BAAQ,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMT,gBAAgB,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YALA,eAMA,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEC,QAAnB;AAA6B,MAAA,SAAS,EAAEH,SAAxC;AAAmD,MAAA,gBAAgB,EAAEY,cAAc,IAAIR,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAAC,cAAD,CAAP,IAA2BF,cAAtD,CAAD;AAAlG;AAAA;AAAA;AAAA;AAAA,YANA,eAOA,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEX,aAAzB;AAAwC,MAAA,UAAU,EAAEC,gBAApD;AAAsE,MAAA,SAAS,EAAEF,SAAjF;AAA4F,MAAA,YAAY,EAAEG,QAA1G;AAAoH,MAAA,WAAW,EAAEE,WAAjI;AAA8I,MAAA,cAAc,EAAEU,UAAU,IAAIX,WAAW,CAACY,eAAe,IAAI,CAAC,GAAGA,eAAJ,EAAqBD,UAArB,CAApB;AAAvL;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADJ;AAWH;;GArCuBhB,a;;KAAAA,a;AAuCxB,MAAMkB,MAAM,GAAGvB,MAAM,CAACwB,GAAI;AAC1B;AACA;AACA,CAHA;MAAMD,M;AAIN,MAAME,MAAM,GAAGzB,MAAM,CAACwB,GAAK;AAC3B;AACA;AACA,CAHA;MAAMC,M","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {Button} from 'react-bootstrap'\nimport Dashboard from '../Dashboard'\nimport SubCard from '../../cards/SubCard'\nimport AddServiceForm from '../../forms/AddServiceForm'\n\nexport default function Subscriptions() {\n    //Need to pass in email of user logged in \n    var userEmail = 'michael.miller@email.com'\n\n    const [addServiceBtn, setAddServiceBtn] = useState(false); \n    const [userSubs, setUserSubs] = useState([]); \n    const [allServices, setAllServices] = useState([])\n\n    useEffect(()=>{\n        fetch('/services').then(response => \n            response.json()).then(data => { \n                setAllServices(data)\n            }); \n    }, []); \n\n    useEffect(()=>{\n        fetch(`/usersubscriptions?Email=${userEmail}`).then(response => \n            response.json()).then(data => { \n                setUserSubs(data); \n            }); \n    }, []); \n\n\n    /**References: How to update UI when adding and removing services:  \n     *  * How to Call a Flask API in React: https://www.youtube.com/watch?v=06pWsB_hoD4\n    */\n    return (\n        <>\n        <Dashboard/>\n        <Header>\n            <h1 className=\"pageHeader\">My Subscriptions</h1>\n        </Header>\n        <AddBtn><Button onClick={() => setAddServiceBtn(true)}>Add Service</Button></AddBtn>\n        <SubCard services={userSubs} userEmail={userEmail} onRemovedService={serviceRemoved => setUserSubs(userSubs.filter(service => service['Service_name'] != serviceRemoved))}/>\n        <AddServiceForm trigger={addServiceBtn} setTrigger={setAddServiceBtn} userEmail={userEmail} userServices={userSubs} allServices={allServices} onAddedService={newService => setUserSubs(currentServices => [...currentServices, newService])}/>\n    </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 70px;\n`\nconst AddBtn = styled.div `\n    margin-left: 1000px; \n    margin-top: 10px;\n`\n"]},"metadata":{},"sourceType":"module"}