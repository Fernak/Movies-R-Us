{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Dashboard from '../Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileEdit() {\n  _s();\n\n  var user = firebase.auth().currentUser;\n  var userEmail = user.email;\n  const [userDetails, setUserDetails] = useState([]);\n  const emailRef = useRef();\n  const [email, setEmail] = useState('');\n  const passwordRef = useRef();\n  const [password, setPassword] = useState('');\n  const nameRef = useRef();\n  const [name, setName] = useState('');\n  const usernameRef = useRef();\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    fetch(`/profile?Email=${userEmail}`).then(response => response.json()).then(data => {\n      console.log(data);\n      setUserDetails([data['userInfo']]);\n    });\n  }, []);\n\n  async function updateUserDatabase() {\n    if (nameRef.current.value !== '') {\n      setName = nameRef.current.value;\n    } else {\n      console.log(\"Users Name\");\n      console.log(userDetails.Name);\n    }\n\n    if (usernameRef.current.value !== '') {\n      setUsername = usernameRef.current.value;\n    } else {}\n\n    if (emailRef.current.value !== '') {\n      setEmail = emailRef.current.value;\n    } else {\n      const user = firebase.auth().currentUser;\n      setEmail = user.email;\n    }\n\n    if (passwordRef.current.value !== '') {\n      setPassword = passwordRef.current.value;\n    } else {} // const request = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({\n    //         Email: email,\n    //         Password: passwordRef.current.value\n    //     })\n    // }\n    // const response = await fetch('/signup', request);\n    // if (response.ok) {\n    //     console.log('Review added')\n    // } else {\n    //     console.log('Not successful')\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100\",\n        style: {\n          maxWidth: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: updateUserDatabase,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                ref: nameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"username\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                ref: usernameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                ref: emailRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                ref: passwordRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: \"w-100\",\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: [\"Don't want to edit profile? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfileEdit, \"umIdZcyc5XXA+TAyNVyH11bT56E=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"sources":["/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js"],"names":["React","useRef","useState","useEffect","firebase","Form","Button","Card","Alert","Link","useHistory","Dashboard","ProfileEdit","user","auth","currentUser","userEmail","email","userDetails","setUserDetails","emailRef","setEmail","passwordRef","password","setPassword","nameRef","name","setName","usernameRef","username","setUsername","error","setError","loading","setLoading","history","fetch","then","response","json","data","console","log","updateUserDatabase","current","value","Name","minHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, useHistory } from \"react-router-dom\"\nimport Dashboard from '../Dashboard'\n\nexport default function ProfileEdit() {\n    var user = firebase.auth().currentUser;\n    var userEmail = user.email;\n\n    const [userDetails, setUserDetails] = useState([]);\n\n    const emailRef = useRef()\n    const [email, setEmail] = useState('')\n    const passwordRef = useRef()\n    const [password, setPassword] = useState('')\n    const nameRef = useRef()\n    const [name, setName] = useState('')\n    const usernameRef = useRef()\n    const [username, setUsername] = useState('')\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    useEffect(() => {\n        fetch(`/profile?Email=${userEmail}`).then(response =>\n            response.json()).then(data => {\n                console.log(data)\n                setUserDetails([data['userInfo']])\n            });\n    }, []);\n\n    async function updateUserDatabase() {\n        if (nameRef.current.value !== '') {\n            setName = nameRef.current.value\n        } else {\n            console.log(\"Users Name\")\n            console.log(userDetails.Name)\n        }\n        if (usernameRef.current.value !== '') {\n            setUsername = usernameRef.current.value\n        } else {\n\n        }\n        if (emailRef.current.value !== '') {\n            setEmail = emailRef.current.value\n        } else {\n            const user = firebase.auth().currentUser;\n            setEmail = user.email;\n        }\n        if (passwordRef.current.value !== '') {\n            setPassword = passwordRef.current.value\n        } else {\n\n        }\n        // const request = {\n        //     method: 'POST',\n        //     headers: { 'Content-Type': 'application/json' },\n        //     body: JSON.stringify({\n        //         Email: email,\n        //         Password: passwordRef.current.value\n        //     })\n        // }\n        // const response = await fetch('/signup', request);\n        // if (response.ok) {\n        //     console.log('Review added')\n\n        // } else {\n        //     console.log('Not successful')\n        // }\n    }\n\n    return (\n        <>\n            <Dashboard />\n            <Card className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                    <Card.Body>\n                        <h2 className=\"text-center mb-4\">Edit Profile</h2>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        <Form onSubmit={updateUserDatabase}>\n                            {/* Name */}\n                            <Form.Group id=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" ref={nameRef} />\n                            </Form.Group>\n                            {/* Username */}\n                            <Form.Group id=\"username\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" ref={usernameRef} />\n                            </Form.Group>\n                            {/* Email */}\n                            <Form.Group id=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} />\n                            </Form.Group>\n                            {/* Password */}\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} />\n                            </Form.Group>\n                            <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\n                        </Form>\n                    </Card.Body>\n                    <div className=\"w-100 text-center mt-2\">\n                        Don't want to edit profile? <Link to=\"/profile\">Cancel</Link>\n                    </div>\n                </div>\n            </Card>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}