{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiffa\\\\CPSC471\\\\Movies-R-Us\\\\src\\\\components\\\\forms\\\\AddServiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Dropdown } from 'semantic-ui-react';\nexport default function AddServiceForm(props) {\n  _s();\n\n  const [userRating, setUserRating] = useState(0);\n  const [review, setReview] = useState('');\n  var Email = props.userEmail;\n\n  function closeReview() {\n    props.setTrigger(false);\n    setUserRating(0);\n    setReview('');\n  }\n  /*\r\n   * Creating request object and getting reponse from API after adding a user review to a certain movie \r\n   * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\r\n   */\n\n\n  async function submitReview() {\n    /** \r\n    if (review == ''){\r\n        console.log('error! Description cannot be empty')\r\n        alert('Description field cannot be empty!')\r\n    } \r\n    else{\r\n        const request = {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ Uid: Uid, Author: 'jonathan.smith', Rating: userRating, Description: review})\r\n        }\r\n        const response = await fetch('/userreview', request); \r\n        if (response.ok){\r\n            console.log('Review added')\r\n         \r\n        } else{\r\n            console.log('Not successful')\r\n        }\r\n        \r\n          props.setTrigger(false)\r\n        console.log(review)\r\n        console.log(userRating)\r\n        setUserRating(0)\r\n        setReview('')   \r\n    }    */\n  }\n  /*References: \r\n      * Creating a add review popup form where users can add a review: \r\n          * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\n\n\n  return props.trigger ? /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReviewForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"default\",\n    style: {\n      background: \"#9FFFCB\"\n    },\n    onClick: closeReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(SubmitBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"default\",\n    style: {\n      background: \"#9FFFCB\"\n    },\n    onClick: submitReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 32\n    }\n  }, \"Submit\"))), \"*/}\", props.children)) : \"\";\n}\n\n_s(AddServiceForm, \"4v5qh7wvjuxLTxYH6gUrQoqf1cY=\");\n\n_c = AddServiceForm;\n;\nconst Popup = styled.div`\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    position: fixed; \n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100vh;  \n    background-color: rgba(0, 0, 0, 0.2);\n`;\n_c2 = Popup;\nconst ReviewForm = styled.div`\n    position: relative; \n    width: 700px; \n    padding: 10px;  \n    background-color: white; \n    border-radius: 10px;\n`;\n_c3 = ReviewForm;\nconst CloseBtn = styled.div`\n    margin-top: 0px; \n    margin-bottom: 10px;  \n    margin-left: 645px;   \n`;\n_c4 = CloseBtn;\nconst SubmitBtn = styled.div`\n    margin-top = 10px;  \n    margin-left: 600px;\n`;\n_c5 = SubmitBtn;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddServiceForm\");\n$RefreshReg$(_c2, \"Popup\");\n$RefreshReg$(_c3, \"ReviewForm\");\n$RefreshReg$(_c4, \"CloseBtn\");\n$RefreshReg$(_c5, \"SubmitBtn\");","map":{"version":3,"sources":["C:/Users/Tiffa/CPSC471/Movies-R-Us/src/components/forms/AddServiceForm.js"],"names":["React","useState","Button","styled","Dropdown","AddServiceForm","props","userRating","setUserRating","review","setReview","Email","userEmail","closeReview","setTrigger","submitReview","trigger","background","children","Popup","div","ReviewForm","CloseBtn","SubmitBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIU,KAAK,GAAGL,KAAK,CAACM,SAAlB;;AAEA,WAASC,WAAT,GAAsB;AAClBP,IAAAA,KAAK,CAACQ,UAAN,CAAiB,KAAjB;AACAN,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH;AAED;AACJ;AACA;AACA;;;AACI,iBAAeK,YAAf,GAA6B;AACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;AACD;AACJ;AACA;;;AACI,SAAQT,KAAK,CAACU,OAAP,gBACH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAU,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAyB,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAhC;AAAyD,IAAA,OAAO,EAAEJ,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV,CADJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAyB,IAAA,KAAK,EAAE;AAACI,MAAAA,UAAU,EAAE;AAAb,KAAhC;AAA0D,IAAA,OAAO,EAAEF,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX,CAHJ,CADJ,SAMKT,KAAK,CAACY,QANX,CADJ,CADG,GAWH,EAXJ;AAYH;;GA1DuBb,c;;KAAAA,c;AA0DvB;AAED,MAAMc,KAAK,GAAGhB,MAAM,CAACiB,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,K;AAYN,MAAME,UAAU,GAAGlB,MAAM,CAACiB,GAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,U;AAQN,MAAMC,QAAQ,GAAGnB,MAAM,CAACiB,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAME,Q;AAKN,MAAMC,SAAS,GAAGpB,MAAM,CAACiB,GAAI;AAC7B;AACA;AACA,CAHA;MAAMG,S","sourcesContent":["import React, {useState} from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport {Dropdown} from 'semantic-ui-react'\r\n\r\nexport default function AddServiceForm(props){\r\n    const [userRating, setUserRating] = useState(0)\r\n    const [review, setReview] = useState('')\r\n    var Email = props.userEmail\r\n\r\n    function closeReview(){\r\n        props.setTrigger(false)\r\n        setUserRating(0)\r\n        setReview('') \r\n    }\r\n\r\n    /*\r\n     * Creating request object and getting reponse from API after adding a user review to a certain movie \r\n     * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\r\n     */\r\n    async function submitReview(){\r\n        /** \r\n        if (review == ''){\r\n            console.log('error! Description cannot be empty')\r\n            alert('Description field cannot be empty!')\r\n        } \r\n        else{\r\n            const request = {\r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ Uid: Uid, Author: 'jonathan.smith', Rating: userRating, Description: review})\r\n            }\r\n            const response = await fetch('/userreview', request); \r\n            if (response.ok){\r\n                console.log('Review added')\r\n             \r\n            } else{\r\n                console.log('Not successful')\r\n            }\r\n            \r\n\r\n            props.setTrigger(false)\r\n            console.log(review)\r\n            console.log(userRating)\r\n            setUserRating(0)\r\n            setReview('')   \r\n        }    */ \r\n    }\r\n    /*References: \r\n        * Creating a add review popup form where users can add a review: \r\n            * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\r\n    return (props.trigger)?(\r\n        <Popup>\r\n            <ReviewForm>\r\n                <Form>\r\n                    <CloseBtn><Button variant=\"default\"style={{background: \"#9FFFCB\"}} onClick={closeReview}>X</Button></CloseBtn>\r\n                    \r\n                    <SubmitBtn><Button variant=\"default\"style={{background: \"#9FFFCB\" }} onClick={submitReview}>Submit</Button></SubmitBtn>\r\n                </Form>*/}\r\n                {props.children}    \r\n            </ReviewForm>             \r\n        </Popup>\r\n    ) : \"\"; \r\n}; \r\n\r\nconst Popup = styled.div `\r\n    display: flex; \r\n    justify-content: center; \r\n    align-items: center; \r\n    position: fixed; \r\n    top: 0; \r\n    left: 0; \r\n    width: 100%; \r\n    height: 100vh;  \r\n    background-color: rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst ReviewForm = styled.div `\r\n    position: relative; \r\n    width: 700px; \r\n    padding: 10px;  \r\n    background-color: white; \r\n    border-radius: 10px;\r\n`\r\n\r\nconst CloseBtn = styled.div`\r\n    margin-top: 0px; \r\n    margin-bottom: 10px;  \r\n    margin-left: 645px;   \r\n`\r\nconst SubmitBtn = styled.div`\r\n    margin-top = 10px;  \r\n    margin-left: 600px;\r\n`"]},"metadata":{},"sourceType":"module"}