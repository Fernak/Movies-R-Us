{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiffa\\\\CPSC471\\\\Movies-R-Us\\\\src\\\\components\\\\cards\\\\ProgramCard.js\";\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\nexport default function ProgramCard({}) {\n  const cardContent = [{\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\",\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2001\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\",\n    title: \"The Hobbit: The Desolation of Smaug\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2013\"\n  }, {\n    image: \"https://techcommunity.microsoft.com/t5/image/serverpage/image-id/217078i525F6A9EF292601F/image-size/large?v=v2&px=999\",\n    title: \"The Grinch\",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2000\"\n  }, {\n    image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\",\n    title: \"Sing\",\n    service: \"Netflix\",\n    genre: \"Family/Musical\",\n    year: \"2016\"\n  }, {\n    image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\",\n    title: \"Inside Out \",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2015\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\",\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2001\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\",\n    title: \"The Hobbit: The Desolation of Smaug\",\n    service: \"Netflix\",\n    genre: \"Fantasy/Adventure\",\n    year: \"2013\"\n  }, {\n    image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\",\n    title: \"The Grinch\",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2000\"\n  }, {\n    image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\",\n    title: \"Sing\",\n    service: \"Netflix\",\n    genre: \"Family/Musical\",\n    year: \"2016\"\n  }, {\n    image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\",\n    title: \"Inside Out \",\n    service: \"Netflix\",\n    genre: \"Family/Comedy\",\n    year: \"2015\"\n  }];\n  /**\r\n   * References: \r\n   * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n   * To populate each card with information from card content object: \r\n   *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n   */\n\n  const renderCard = (card, index) => {\n    return (\n      /*#__PURE__*/\n\n      /*<Link to=\"/indivtvshow\">*/\n      React.createElement(Card, {\n        style: {\n          width: '10rem'\n        },\n        key: index,\n        className: \"pCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: card.image,\n        style: {\n          height: \"180px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, card.title), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, card.service), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, card.genre), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, card.year), /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        className: \"favBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"+\")))\n      /*</Link>*/\n\n    );\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, cardContent.map(renderCard));\n}\n_c = ProgramCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgramCard\");","map":{"version":3,"sources":["C:/Users/Tiffa/CPSC471/Movies-R-Us/src/components/cards/ProgramCard.js"],"names":["React","Card","Button","Link","ProgramCard","cardContent","image","title","service","genre","year","renderCard","card","index","width","height","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './Card.css'\r\n\r\nexport default function ProgramCard({}){\r\n    const cardContent = [\r\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\", title: \"The Lord of the Rings: The Fellowship of the Ring\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2001\"}, \r\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\", title: \"The Hobbit: The Desolation of Smaug\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2013\"}, \r\n        {image: \"https://techcommunity.microsoft.com/t5/image/serverpage/image-id/217078i525F6A9EF292601F/image-size/large?v=v2&px=999\", title: \"The Grinch\", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2000\"}, \r\n        {image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\", title: \"Sing\", service: \"Netflix\", genre: \"Family/Musical\", year:\"2016\"}, \r\n        {image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\", title: \"Inside Out \", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2015\"}, \r\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT9J7XACn3tlD6v4UXRMvT2wJN8FGCCPeh8U3RkZ6__tR4wGhSo\", title: \"The Lord of the Rings: The Fellowship of the Ring\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2001\"}, \r\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT8e9aFTxDo5jCIaaDNYgNcjJ4JFIz8MVlJr3-nhggVytaoFLOu\", title: \"The Hobbit: The Desolation of Smaug\", service: \"Netflix\", genre: \"Fantasy/Adventure\", year:\"2013\"}, \r\n        {image: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT-oosslYzD61pdLgPVmjN53hdzb-bjBeJajr2UILlq7kQNz7jR\", title: \"The Grinch\", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2000\"}, \r\n        {image: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQeTMzh3aGw46IVUdS6N2tToanuLOc9dO7f6CgWVQlq1laJjuXa\", title: \"Sing\", service: \"Netflix\", genre: \"Family/Musical\", year:\"2016\"}, \r\n        {image: \"https://upload.wikimedia.org/wikipedia/en/0/0a/Inside_Out_%282015_film%29_poster.jpg\", title: \"Inside Out \", service: \"Netflix\", genre: \"Family/Comedy\", year:\"2015\"}\r\n    ]; \r\n\r\n    /**\r\n     * References: \r\n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n     * To populate each card with information from card content object: \r\n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n     */\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            /*<Link to=\"/indivtvshow\">*/\r\n                <Card style={{ width: '10rem'}} key={index} className=\"pCard\">\r\n                <Card.Img variant=\"top\" src={card.image} style={{height: \"180px\"}}/>\r\n                <Card.Body>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardTitle\">{card.title}</Card.Text>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.service}</Card.Text>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.genre}</Card.Text>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.year}</Card.Text>\r\n                    <Button variant=\"secondary\" className=\"favBtn\">+</Button>\r\n                    </Card.Body>\r\n            </Card>\r\n            /*</Link>*/\r\n        ); \r\n    }; \r\n    return <div className=\"grid\">{cardContent.map(renderCard)}</div>; \r\n}; \r\n"]},"metadata":{},"sourceType":"module"}