{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiffa\\\\CPSC471\\\\Movies-R-Us\\\\src\\\\components\\\\cards\\\\ProgramCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './Card.css';\nexport default function ProgramCard({\n  programs\n}) {\n  _s();\n\n  let history = useHistory();\n  /**\r\n   * References: \r\n   * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n   * To populate each card with information from card content object: \r\n   *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n   * To pass Uid of card to the more details page: How to pass props with react-router using onClick methods\r\n   *  https://stackoverflow.com/questions/54083066/how-to-pass-props-with-react-router-using-onclick-methods\r\n  */\n\n  const renderCard = (card, index) => {\n    return (\n      /*#__PURE__*/\n\n      /*<Link to=\"/indivtvshow\">\r\n          <Card style={{ width: '10rem'}} key={index} className=\"pCard\">\r\n          <Card.Img variant=\"top\" src={card.Image} style={{height: \"180px\"}} onClick={() => history.push('/programdetails', {Uid: card.Uid})}/>\r\n          <Card.Body onClick={() => history.push('/programdetails', {Uid: card.Uid})}>\r\n              <Card.Text style={{height: '0rem'}} className=\"cardTitle\">{card.Name}</Card.Text>\r\n              <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.Service_name}</Card.Text>               \r\n          </Card.Body>\r\n          <Button variant=\"secondary\" className=\"favBtn\">+</Button>\r\n      </Card>\r\n      </Link>*/\n      React.createElement(\"img\", {\n        className: `row__poster ${\"row__posterLarge\"}`,\n        src: card.Image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      })\n    );\n  }; //return <div className=\"grid\">{programs && programs.map(renderCard)}</div>; \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, programs && programs.map(renderCard)));\n}\n\n_s(ProgramCard, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProgramCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgramCard\");","map":{"version":3,"sources":["C:/Users/Tiffa/CPSC471/Movies-R-Us/src/components/cards/ProgramCard.js"],"names":["React","Card","Button","useHistory","ProgramCard","programs","history","renderCard","card","index","Image","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAgC;AAAA;;AAC3C,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC;AAAA;;AACI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwB;AAAK,QAAA,SAAS,EAAG,eAAc,kBAAmB,EAAlD;AAAoD,QAAA,GAAG,EAAED,IAAI,CAACE,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZhB;AAeH,GAhBD,CAX2C,CA4B3C;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QAAQ,IAAIA,QAAQ,CAACM,GAAT,CAAaJ,UAAb,CADjB,CADJ,CADJ;AAOH;;GApCuBH,W;UACND,U;;;KADMC,W;AAoCvB","sourcesContent":["import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport './Card.css'\r\n\r\nexport default function ProgramCard({programs}){\r\n    let history = useHistory(); \r\n    /**\r\n     * References: \r\n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n     * To populate each card with information from card content object: \r\n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n     * To pass Uid of card to the more details page: How to pass props with react-router using onClick methods\r\n     *  https://stackoverflow.com/questions/54083066/how-to-pass-props-with-react-router-using-onclick-methods\r\n    */ \r\n   \r\n    const renderCard = (card, index) => {\r\n        return (\r\n            /*<Link to=\"/indivtvshow\">\r\n                <Card style={{ width: '10rem'}} key={index} className=\"pCard\">\r\n                <Card.Img variant=\"top\" src={card.Image} style={{height: \"180px\"}} onClick={() => history.push('/programdetails', {Uid: card.Uid})}/>\r\n                <Card.Body onClick={() => history.push('/programdetails', {Uid: card.Uid})}>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardTitle\">{card.Name}</Card.Text>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.Service_name}</Card.Text>               \r\n                </Card.Body>\r\n                <Button variant=\"secondary\" className=\"favBtn\">+</Button>\r\n            </Card>\r\n            </Link>*/\r\n                    \r\n                        <img className={`row__poster ${\"row__posterLarge\"}`}src={card.Image}\r\n                        />\r\n        ); \r\n    }; \r\n    //return <div className=\"grid\">{programs && programs.map(renderCard)}</div>; \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"row__posters\">\r\n                {programs && programs.map(renderCard)}\r\n            </div>\r\n        </div>\r\n        ); \r\n}; \r\n"]},"metadata":{},"sourceType":"module"}