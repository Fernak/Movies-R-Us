{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiffa\\\\CPSC471\\\\Movies-R-Us\\\\src\\\\components\\\\forms\\\\AddServiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Form, Select } from 'semantic-ui-react';\nexport default function AddServiceForm(props) {\n  _s();\n\n  const [allServices, setAllServices] = useState([]);\n  var Email = props.userEmail;\n  const options = [{\n    key: 'Bye',\n    text: 'Bye',\n    value: 'Bye'\n  }, {\n    key: 'hell0',\n    text: 'Hell0',\n    value: 'Hello'\n  }];\n  useEffect(() => {\n    fetch('/services').then(response => response.json()).then(data => {\n      setAllServices(data);\n    });\n  }, []);\n\n  function closeReview() {\n    props.setTrigger(false); //setUserRating(0)\n    //setReview('') \n  }\n  /*\r\n   * Creating request object and getting reponse from API after adding a user review to a certain movie \r\n   * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\r\n   */\n\n\n  async function submitReview() {\n    /** \r\n    if (review == ''){\r\n        console.log('error! Description cannot be empty')\r\n        alert('Description field cannot be empty!')\r\n    } \r\n    else{\r\n        const request = {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ Uid: Uid, Author: 'jonathan.smith', Rating: userRating, Description: review})\r\n        }\r\n        const response = await fetch('/userreview', request); \r\n        if (response.ok){\r\n            console.log('Review added')\r\n         \r\n        } else{\r\n            console.log('Not successful')\r\n        }\r\n        \r\n          props.setTrigger(false)\r\n        console.log(review)\r\n        console.log(userRating)\r\n        setUserRating(0)\r\n        setReview('')   \r\n    }    */\n  }\n  /*References: \r\n      * Creating a add review popup form where users can add a review: \r\n          * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\n\n\n  return props.trigger ? /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReviewForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Top, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Add a service\"), /*#__PURE__*/React.createElement(CloseBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"default\",\n    style: {\n      background: \"#9FFFCB\"\n    },\n    onClick: closeReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      marginLeft: \"20px\",\n      width: \"300px\"\n    },\n    options: options,\n    placeholder: \"Select Service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SubmitBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"default\",\n    style: {\n      background: \"#9FFFCB\"\n    },\n    onClick: submitReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 32\n    }\n  }, \"Add\"))), props.children)) : \"\";\n}\n\n_s(AddServiceForm, \"NY7UxANoDzSLGCYI4mAlQsRYX68=\");\n\n_c = AddServiceForm;\n;\nconst Popup = styled.div`\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    position: fixed; \n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100vh;  \n    background-color: rgba(0, 0, 0, 0.2);\n`;\n_c2 = Popup;\nconst ReviewForm = styled.div`\n    position: relative; \n    width: 400px; \n    padding: 10px;  \n    background-color: white; \n    border-radius: 10px;\n`;\n_c3 = ReviewForm;\nconst Top = styled.div`\n    display: flex;  \n    margin-bottom: 0px; \n`;\n_c4 = Top;\nconst CloseBtn = styled.div`\n    margin-top: 0px; \n    margin-bottom: 10px;  \n    margin-left: 200px;   \n`;\n_c5 = CloseBtn;\nconst SubmitBtn = styled.div`\n    margin-top = 10px;  \n    margin-left: 320px;\n`;\n_c6 = SubmitBtn;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AddServiceForm\");\n$RefreshReg$(_c2, \"Popup\");\n$RefreshReg$(_c3, \"ReviewForm\");\n$RefreshReg$(_c4, \"Top\");\n$RefreshReg$(_c5, \"CloseBtn\");\n$RefreshReg$(_c6, \"SubmitBtn\");","map":{"version":3,"sources":["C:/Users/Tiffa/CPSC471/Movies-R-Us/src/components/forms/AddServiceForm.js"],"names":["React","useState","useEffect","Button","styled","Form","Select","AddServiceForm","props","allServices","setAllServices","Email","userEmail","options","key","text","value","fetch","then","response","json","data","closeReview","setTrigger","submitReview","trigger","background","marginLeft","width","children","Popup","div","ReviewForm","Top","CloseBtn","SubmitBtn"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport {Form, Select} from 'semantic-ui-react'\r\n\r\nexport default function AddServiceForm(props){\r\n    const [allServices, setAllServices] = useState([])\r\n    var Email = props.userEmail\r\n\r\n    const options = [{key: 'Bye', text: 'Bye', value:'Bye'}, {key: 'hell0', text: 'Hell0', value:'Hello'}]\r\n\r\n    useEffect(()=>{\r\n        fetch('/services').then(response => \r\n            response.json()).then(data => { \r\n                setAllServices(data); \r\n            }); \r\n    }, []); \r\n\r\n\r\n    function closeReview(){\r\n        props.setTrigger(false)\r\n        //setUserRating(0)\r\n        //setReview('') \r\n    }\r\n\r\n    /*\r\n     * Creating request object and getting reponse from API after adding a user review to a certain movie \r\n     * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\r\n     */\r\n    async function submitReview(){\r\n        /** \r\n        if (review == ''){\r\n            console.log('error! Description cannot be empty')\r\n            alert('Description field cannot be empty!')\r\n        } \r\n        else{\r\n            const request = {\r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ Uid: Uid, Author: 'jonathan.smith', Rating: userRating, Description: review})\r\n            }\r\n            const response = await fetch('/userreview', request); \r\n            if (response.ok){\r\n                console.log('Review added')\r\n             \r\n            } else{\r\n                console.log('Not successful')\r\n            }\r\n            \r\n\r\n            props.setTrigger(false)\r\n            console.log(review)\r\n            console.log(userRating)\r\n            setUserRating(0)\r\n            setReview('')   \r\n        }    */ \r\n    }\r\n    /*References: \r\n        * Creating a add review popup form where users can add a review: \r\n            * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\r\n    return (props.trigger)?(\r\n        <Popup>\r\n            <ReviewForm>\r\n                <Form>\r\n                    <Top>\r\n                        <h2>Add a service</h2>\r\n                        <CloseBtn><Button variant=\"default\"style={{background: \"#9FFFCB\"}} onClick={closeReview}>X</Button></CloseBtn>\r\n                    </Top>\r\n                    <Select style={{marginLeft: \"20px\", width: \"300px\"}} options={options} placeholder='Select Service'/>\r\n                    <SubmitBtn><Button variant=\"default\"style={{background: \"#9FFFCB\" }} onClick={submitReview}>Add</Button></SubmitBtn>\r\n                </Form>\r\n                {props.children}    \r\n            </ReviewForm>             \r\n        </Popup>\r\n    ) : \"\"; \r\n}; \r\n\r\nconst Popup = styled.div `\r\n    display: flex; \r\n    justify-content: center; \r\n    align-items: center; \r\n    position: fixed; \r\n    top: 0; \r\n    left: 0; \r\n    width: 100%; \r\n    height: 100vh;  \r\n    background-color: rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst ReviewForm = styled.div `\r\n    position: relative; \r\n    width: 400px; \r\n    padding: 10px;  \r\n    background-color: white; \r\n    border-radius: 10px;\r\n`\r\n\r\nconst Top = styled.div`\r\n    display: flex;  \r\n    margin-bottom: 0px; \r\n`\r\n\r\nconst CloseBtn = styled.div`\r\n    margin-top: 0px; \r\n    margin-bottom: 10px;  \r\n    margin-left: 200px;   \r\n`\r\nconst SubmitBtn = styled.div`\r\n    margin-top = 10px;  \r\n    margin-left: 320px;\r\n`"]},"metadata":{},"sourceType":"module"}