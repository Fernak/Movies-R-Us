{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Dashboard from '../Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileEdit() {\n  _s();\n\n  const emailRef = useRef();\n  const [email, setEmail] = useState('');\n  const passwordRef = useRef();\n  const [password, setPassword] = useState('');\n  const nameRef = useRef();\n  const [name, setName] = useState('');\n  const usernameRef = useRef();\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function updateUserDatabase() {\n    if (nameRef.current.value !== '') {\n      setName = nameRef.current.value;\n    } else {}\n\n    if (usernameRef.current.value !== '') {\n      setUsername = usernameRef.current.value;\n    } else {}\n\n    if (emailRef.current.value !== '') {\n      setEmail = emailRef.current.value;\n    } else {\n      const user = firebase.auth().currentUser;\n      setEmail = user.email;\n    }\n\n    if (passwordRef.current.value !== '') {\n      setPassword = passwordRef.current.value;\n    } else {}\n\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Email: email,\n        Password: passwordRef.current.value\n      })\n    };\n    const response = await fetch('/signup', request);\n\n    if (response.ok) {\n      console.log('Review added');\n    } else {\n      console.log('Not successful');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100\",\n        style: {\n          maxWidth: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: updateUserDatabase,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                ref: nameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"username\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                ref: usernameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                ref: emailRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                ref: passwordRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: \"w-100\",\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: [\"Don't want to edit profile? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfileEdit, \"V8s8azjtxXk+AfOsLCr2ow3IW7A=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"sources":["/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js"],"names":["React","useRef","useState","firebase","Form","Button","Card","Alert","Link","useHistory","Dashboard","ProfileEdit","emailRef","email","setEmail","passwordRef","password","setPassword","nameRef","name","setName","usernameRef","username","setUsername","error","setError","loading","setLoading","history","updateUserDatabase","current","value","user","auth","currentUser","request","method","headers","body","JSON","stringify","Email","Password","response","fetch","ok","console","log","minHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, useHistory } from \"react-router-dom\"\nimport Dashboard from '../Dashboard'\n\nexport default function ProfileEdit() {\n    const emailRef = useRef()\n    const [email, setEmail] = useState('')\n    const passwordRef = useRef()\n    const [password, setPassword] = useState('')\n    const nameRef = useRef()\n    const [name, setName] = useState('')\n    const usernameRef = useRef()\n    const [username, setUsername] = useState('')\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function updateUserDatabase() {\n        if (nameRef.current.value !== '') {\n            setName = nameRef.current.value\n        } else {\n\n        }\n        if (usernameRef.current.value !== '') {\n            setUsername = usernameRef.current.value\n        } else {\n\n        }\n        if (emailRef.current.value !== '') {\n            setEmail = emailRef.current.value\n        } else {\n            const user = firebase.auth().currentUser;\n            setEmail = user.email;\n        }\n        if (passwordRef.current.value !== '') {\n            setPassword = passwordRef.current.value\n        } else {\n\n        }\n        const request = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                Email: email,\n                Password: passwordRef.current.value\n            })\n        }\n        const response = await fetch('/signup', request);\n        if (response.ok) {\n            console.log('Review added')\n\n        } else {\n            console.log('Not successful')\n        }\n    }\n\n    return (\n        <>\n            <Dashboard />\n            <Card className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                    <Card.Body>\n                        <h2 className=\"text-center mb-4\">Edit Profile</h2>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        <Form onSubmit={updateUserDatabase}>\n                            {/* Name */}\n                            <Form.Group id=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" ref={nameRef} />\n                            </Form.Group>\n                            {/* Username */}\n                            <Form.Group id=\"username\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" ref={usernameRef} />\n                            </Form.Group>\n                            {/* Email */}\n                            <Form.Group id=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} />\n                            </Form.Group>\n                            {/* Password */}\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} />\n                            </Form.Group>\n                            <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\n                        </Form>\n                    </Card.Body>\n                    <div className=\"w-100 text-center mt-2\">\n                        Don't want to edit profile? <Link to=\"/profile\">Cancel</Link>\n                    </div>\n                </div>\n            </Card>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}