{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiffa\\\\CPSC471\\\\Movies-R-Us\\\\src\\\\components\\\\cards\\\\ProgramCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './Card.css';\nexport default function ProgramCard({\n  programs\n}) {\n  _s();\n\n  let history = useHistory();\n  /**\r\n   * References: \r\n   * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n   * To populate each card with information from card content object: \r\n   *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n  */\n\n  const renderCard = (card, index) => {\n    return (\n      /*#__PURE__*/\n\n      /*<Link to=\"/indivtvshow\">*/\n      React.createElement(Card, {\n        style: {\n          width: '10rem'\n        },\n        key: index,\n        className: \"pCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: card.Image,\n        style: {\n          height: \"180px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, card.Name), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          height: '0rem'\n        },\n        className: \"cardText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, card.Service_name), /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        className: \"favBtn\",\n        onClick: () => history.push('/indivtvshow'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"+\")))\n      /*</Link>*/\n\n    );\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, programs && programs.map(renderCard));\n}\n\n_s(ProgramCard, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProgramCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgramCard\");","map":{"version":3,"sources":["C:/Users/Tiffa/CPSC471/Movies-R-Us/src/components/cards/ProgramCard.js"],"names":["React","Card","Button","useHistory","ProgramCard","programs","history","renderCard","card","index","width","Image","height","Name","Service_name","push","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAgC;AAAA;;AAC3C,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC;AAAA;;AACI;AACI,0BAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAgC,QAAA,GAAG,EAAED,KAArC;AAA4C,QAAA,SAAS,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAED,IAAI,CAACG,KAAlC;AAAyC,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAACA,UAAAA,MAAM,EAAE;AAAT,SAAlB;AAAoC,QAAA,SAAS,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DJ,IAAI,CAACK,IAAhE,CADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAACD,UAAAA,MAAM,EAAE;AAAT,SAAlB;AAAoC,QAAA,SAAS,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0DJ,IAAI,CAACM,YAA/D,CAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAE,MAAMR,OAAO,CAACS,IAAR,CAAa,cAAb,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CAFA;AAQJ;;AAVJ;AAYH,GAbD;;AAcA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBV,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAaT,UAAb,CAAnC,CAAP;AACH;;GAxBuBH,W;UACND,U;;;KADMC,W;AAwBvB","sourcesContent":["import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport './Card.css'\r\n\r\nexport default function ProgramCard({programs}){\r\n    let history = useHistory(); \r\n    /**\r\n     * References: \r\n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n     * To populate each card with information from card content object: \r\n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n    */ \r\n   \r\n    const renderCard = (card, index) => {\r\n        return (\r\n            /*<Link to=\"/indivtvshow\">*/\r\n                <Card style={{ width: '10rem'}} key={index} className=\"pCard\">\r\n                <Card.Img variant=\"top\" src={card.Image} style={{height: \"180px\"}}/>\r\n                <Card.Body>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardTitle\">{card.Name}</Card.Text>\r\n                    <Card.Text style={{height: '0rem'}} className=\"cardText\">{card.Service_name}</Card.Text>\r\n                    <Button variant=\"secondary\" className=\"favBtn\" onClick={() => history.push('/indivtvshow')}>+</Button>\r\n                    </Card.Body>\r\n            </Card>\r\n            /*</Link>*/\r\n        ); \r\n    }; \r\n    return <div className=\"grid\">{programs && programs.map(renderCard)}</div>; \r\n}; \r\n"]},"metadata":{},"sourceType":"module"}