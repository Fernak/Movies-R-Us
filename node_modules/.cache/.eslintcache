[{"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\index.js":"1","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\App.js":"2","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\PrivateRoute.js":"3","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\Dashboard.js":"4","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Home.js":"5","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Profile.js":"6","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\SignUp.js":"7","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\ForgotPassword.js":"8","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\contexts\\AuthContext.js":"9","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\Login.js":"10","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\TVShows.js":"11","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Movies.js":"12","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\ProfileEdit.js":"13","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Subscriptions.js":"14","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\CrewDetails.js":"15","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Favourites.js":"16","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\ProgramDetails.js":"17","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\SideBarItem.js":"18","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\firebase.js":"19","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\ProgramCard.js":"20","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\CrewCard.js":"21","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\SubCard.js":"22","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\ReviewCard.js":"23","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\forms\\AddServiceForm.js":"24","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\forms\\AddReviewForm.js":"25","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Schedule.js":"26","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\SearchPage.js":"27","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\UserCard.js":"28"},{"size":306,"mtime":1618547308534,"results":"29","hashOfConfig":"30"},{"size":2535,"mtime":1618587647127,"results":"31","hashOfConfig":"30"},{"size":477,"mtime":1618547308280,"results":"32","hashOfConfig":"30"},{"size":4832,"mtime":1618591116200,"results":"33","hashOfConfig":"30"},{"size":2955,"mtime":1618597032403,"results":"34","hashOfConfig":"30"},{"size":3526,"mtime":1618589221860,"results":"35","hashOfConfig":"30"},{"size":3257,"mtime":1618547308503,"results":"36","hashOfConfig":"30"},{"size":2076,"mtime":1618547308488,"results":"37","hashOfConfig":"30"},{"size":1234,"mtime":1618547308512,"results":"38","hashOfConfig":"30"},{"size":2088,"mtime":1618547308496,"results":"39","hashOfConfig":"30"},{"size":2520,"mtime":1618559307875,"results":"40","hashOfConfig":"30"},{"size":2499,"mtime":1618559177720,"results":"41","hashOfConfig":"30"},{"size":5992,"mtime":1618593806213,"results":"42","hashOfConfig":"30"},{"size":3080,"mtime":1618559127456,"results":"43","hashOfConfig":"30"},{"size":5282,"mtime":1618568881360,"results":"44","hashOfConfig":"30"},{"size":1922,"mtime":1618556952281,"results":"45","hashOfConfig":"30"},{"size":12690,"mtime":1618565672773,"results":"46","hashOfConfig":"30"},{"size":1558,"mtime":1618547308354,"results":"47","hashOfConfig":"30"},{"size":587,"mtime":1618547308524,"results":"48","hashOfConfig":"30"},{"size":1146,"mtime":1618589189297,"results":"49","hashOfConfig":"30"},{"size":1210,"mtime":1618549964482,"results":"50","hashOfConfig":"30"},{"size":3727,"mtime":1618561826560,"results":"51","hashOfConfig":"30"},{"size":2330,"mtime":1618567350390,"results":"52","hashOfConfig":"30"},{"size":4091,"mtime":1618588325411,"results":"53","hashOfConfig":"30"},{"size":3676,"mtime":1618551729677,"results":"54","hashOfConfig":"30"},{"size":3325,"mtime":1618558205664,"results":"55","hashOfConfig":"30"},{"size":2420,"mtime":1618593612023,"results":"56","hashOfConfig":"30"},{"size":2186,"mtime":1618597067806,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"8klal3",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\index.js",[],["126","127"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\App.js",["128"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\Dashboard.js",["129","130","131"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Home.js",["132"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Profile.js",["133","134","135","136"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\SignUp.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\ForgotPassword.js",["137"],"import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n\r\n            //Firebase call to reset password by email\r\n            //await resetPassword(emailRef.current.value)\r\n            //setMessage('Check your inbox for further instructions.')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\login\\Login.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\TVShows.js",["138"],"import React, {useEffect, useState} from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport ProgramCard from '../../cards/ProgramCard'\r\nimport styled from 'styled-components'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function TVShows() {\r\n    const user = firebase.auth().currentUser;\r\n    var userEmail = user.email\r\n    \r\n    /**\r\n     * References: \r\n     *  * How to call an api endpoint and get the data to pass to Program card component \r\n     *      * How to Call a Flask API in React https://www.youtube.com/watch?v=06pWsB_hoD4&t=0s\r\n     */\r\n    const[admins, setAdmins] = useState([])\r\n    const [tvshows, setTvshows] = useState([]); \r\n    const [allTvshows, setAllTvshows] = useState([])\r\n\r\n    //Getting list of all admin emails from API call \r\n    useEffect(() => {\r\n        fetch(`/admin`).then(response =>\r\n            response.json()).then(data => {\r\n                setAdmins(data);\r\n            });\r\n    }, []);\r\n\r\n    //Getting all programs that from services that the user is subscribed to from API call (will be used when user is not an admin) \r\n    useEffect(()=>{\r\n        fetch(`/programs?Type=TV Show&Email=${userEmail}`).then(response => \r\n            response.json()).then(data => { \r\n                setTvshows(data); \r\n            }); \r\n    }, []); \r\n\r\n    // Getting all programs that exist in the database from API call (will be used when user is an admin)\r\n    useEffect(() => {\r\n        fetch(`/allprograms`).then(response =>\r\n            response.json()).then(data => {\r\n                setAllTvshows(data['tvshows']);\r\n            });\r\n    }, []);\r\n\r\n    // Checking if user logged in is an admin and display the corresponding results \r\n    if (!(admins.some(admin => admin.Email === userEmail))){\r\n        return (\r\n            <>\r\n                <Dashboard/>\r\n                <Header>\r\n                    <h1 className=\"pageHeader\">TV Shows</h1>\r\n                </Header>\r\n                {/*Passing the object to the ProgramCard component*/}\r\n                <ProgramCard programs={tvshows}/>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <Dashboard />\r\n                <Header>\r\n                    <h1>Movies</h1>\r\n                </Header>\r\n                {/*Passing the object to the ProgramCard component*/}\r\n                <ProgramCard programs={allTvshows} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 10px;\r\n`","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Movies.js",["139"],"import React, { useEffect, useState } from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport ProgramCard from '../../cards/ProgramCard'\r\nimport styled from 'styled-components'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nexport default function Movies() {\r\n    const user = firebase.auth().currentUser;\r\n    var userEmail = user.email\r\n\r\n    /**\r\n     * References: \r\n     *  * How to call an api endpoint and get the data to pass to Program card component \r\n     *      * How to Call a Flask API in React https://www.youtube.com/watch?v=06pWsB_hoD4&t=0s\r\n     */\r\n    const [admins, setAdmins] = useState([])\r\n    const [userMovies, setUserMovies] = useState([])\r\n    const [allMovies, setAllMovies] = useState([])\r\n\r\n    //Getting list of all admin emails from API call \r\n    useEffect(() => {\r\n        fetch(`/admin`).then(response =>\r\n            response.json()).then(data => {\r\n                setAdmins(data);\r\n            });\r\n    }, []);\r\n\r\n    //Getting all programs that from services that the user is subscribed to from API call (will be used when user is not an admin) \r\n    useEffect(() => {\r\n        fetch(`/programs?Type=Movie&Email=${userEmail}`).then(response =>\r\n            response.json()).then(data => {\r\n                setUserMovies(data);\r\n            });\r\n    }, []);\r\n\r\n    // Getting all programs that exist in the database from API call (will be used when user is an admin)\r\n    useEffect(() => {\r\n        fetch(`/allprograms`).then(response =>\r\n            response.json()).then(data => {\r\n                setAllMovies(data['movies']);\r\n            });\r\n    }, []);\r\n\r\n    // Checking if user logged in is an admin and display the corresponding results \r\n    if (!(admins.some(admin => admin.Email === userEmail))){\r\n        return (\r\n            <>\r\n                <Dashboard />\r\n                <Header>\r\n                    <h1>Movies</h1>\r\n                </Header>\r\n                {/*Passing the object to the ProgramCard component*/}\r\n                <ProgramCard programs={userMovies} />\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <Dashboard />\r\n                <Header>\r\n                    <h1>Movies</h1>\r\n                </Header>\r\n                {/*Passing the object to the ProgramCard component*/}\r\n                <ProgramCard programs={allMovies} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 10px;\r\n`\r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\ProfileEdit.js",["140","141"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Subscriptions.js",["142","143"],"import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button} from 'semantic-ui-react'\r\nimport Dashboard from '../Dashboard'\r\nimport SubCard from '../../cards/SubCard'\r\nimport AddServiceForm from '../../forms/AddServiceForm'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function Subscriptions() {\r\n    const user = firebase.auth().currentUser\r\n    var userEmail = user.email\r\n\r\n    const [admins, setAdmins] = useState([])\r\n    const [addServiceBtn, setAddServiceBtn] = useState(false); \r\n    const [userSubs, setUserSubs] = useState([]); \r\n    const [allServices, setAllServices] = useState([])\r\n\r\n    //Getting list of all admin emails from API call \r\n    useEffect(() => {\r\n        fetch(`/admin`).then(response =>\r\n            response.json()).then(data => {\r\n                setAdmins(data);\r\n            });\r\n    }, []);\r\n\r\n    //Getting list of all available streaming services from API call \r\n    useEffect(()=>{\r\n        fetch('/services').then(response => \r\n            response.json()).then(data => { \r\n                setAllServices(data)\r\n            }); \r\n    }, []); \r\n\r\n    //GEtting the \r\n    useEffect(()=>{\r\n        fetch(`/usersubscriptions?Email=${userEmail}`).then(response => \r\n            response.json()).then(data => { \r\n                setUserSubs(data); \r\n            }); \r\n    }, []); \r\n\r\n        // Checking if user logged in is an admin and display the corresponding results \r\n        if (!(admins.some(admin => admin.Email === userEmail))){\r\n            /**References: How to update UI when adding and removing services:  \r\n            *  * How to Call a Flask API in React: https://www.youtube.com/watch?v=06pWsB_hoD4\r\n            */\r\n            return (\r\n                <>\r\n                    <Dashboard/>\r\n                    <Header>\r\n                        <h1>My Subscriptions</h1>\r\n                    </Header>\r\n                    <AddBtn><Button color='blue' onClick={() => setAddServiceBtn(true)}>Add Service</Button></AddBtn>\r\n                    <SubCard services={userSubs} userEmail={userEmail} adminStatus={false} onRemovedService={serviceRemoved => setUserSubs(userSubs.filter(service => service['Service_name'] != serviceRemoved))}/>\r\n                    <AddServiceForm trigger={addServiceBtn} setTrigger={setAddServiceBtn} userEmail={userEmail} userServices={userSubs} allServices={allServices} onAddedService={newService => setUserSubs(currentServices => [...currentServices, newService])}/>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <Dashboard/>\r\n                    <Header>\r\n                        <h1>All Services</h1>\r\n                    </Header>\r\n                    <SubCard services={allServices} userEmail={userEmail} adminStatus={true}/>\r\n                </>\r\n            )\r\n        }\r\n}\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 70px;\r\n`\r\nconst AddBtn = styled.div `\r\n    margin-left: 1060px; \r\n    margin-top: 10px;\r\n`\r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\CrewDetails.js",["144","145","146"],"import React, {useState, useEffect} from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport {Button} from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport ProgramCard from '../../cards/ProgramCard'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function CrewDetails(props) {\r\n    const user = firebase.auth().currentUser\r\n    var userEmail = user.email\r\n    var Cid = props.location.state['Cid']\r\n    var favCrew = [] \r\n    var favStatus\r\n\r\n    const [crewDetails, setCrewDetails] = useState([])\r\n    const [crewPrograms, setCrewPrograms] = useState([])\r\n    const [crewRoles, setCrewRoles] = useState([])\r\n    const [userFavCrew, setUserFavCrew] = useState([]); \r\n\r\n    useEffect(() => {\r\n        fetch(`/crewdetails?Cid=${Cid}`).then(response =>\r\n            response.json()).then(data => {\r\n                setCrewDetails([data['crewinfo']])\r\n                setCrewPrograms(data['crewprograms'])\r\n                setCrewRoles(data['crewroles'])\r\n                console.log(props.location.state['Cid'])\r\n            });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        fetch(`/userfavs?Email=${userEmail}`).then(response => \r\n            response.json()).then(data => { \r\n                setUserFavCrew(data['favouritecrew'])\r\n            }); \r\n    }, []); \r\n\r\n    /**Getting the Uid of all the user favourited movies */\r\n    for (var i=0; i<userFavCrew.length; i++){\r\n            favCrew.push(userFavCrew[i]['Cid'])\r\n    }\r\n    \r\n    //Checking if the program has already been added to the user's favourite \r\n    if (favCrew.includes(Cid)){\r\n        favStatus = true; \r\n    }\r\n    else {\r\n        favStatus = false; \r\n    } \r\n\r\n    async function addOrRemoveFavourite(){\r\n        /*Request to add to user reviews  */\r\n        if (favStatus == false){ \r\n            const request = {\r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ Email: userEmail,  Uid: '', Cid: Cid})\r\n            }\r\n            console.log(request)\r\n            const response = await fetch('/userfavs', request); \r\n            if (response.ok){\r\n                console.log('Added to favourites added')\r\n                alert('Crew has been successfully added to your favourites')      \r\n            } else{\r\n                console.log('Not successful')\r\n            }\r\n            favStatus = true\r\n        }\r\n        else{\r\n            const request = {\r\n                method: 'DELETE', \r\n                headers: { 'Content-Type': 'application/json' },\r\n            }\r\n            const response = await fetch(`/userfavs?Email=${userEmail}&Cid=${Cid}`, request); \r\n            if (response.ok){\r\n                console.log('Removed from favourtes')\r\n                alert('Crew has been successfully removed from your favourites')\r\n                console.log(response)\r\n            } else{\r\n                console.log('Remove not successful')\r\n            }\r\n            favStatus = false; \r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dashboard />\r\n            {crewDetails.map(details => (\r\n                <div>\r\n                    <Top>\r\n                        <Image><img style={{width: \"240px\", height: \"330px\"}} src={details.Image} alt=\"\" /></Image>\r\n                        <div style={{ marginLeft: \"50px\" }}>\r\n                            <Title><h1>{details.Name}</h1></Title>\r\n                            <div>\r\n                                <Text><h3>Gender: {details.Name}</h3></Text>\r\n                                <Text><h3>Hometown: {details.Hometown}</h3></Text>\r\n                                <Text1><h3>Roles:</h3></Text1>\r\n                                {crewRoles.map(roles => (\r\n                                    <h4 style={{ marginLeft: \"50px\", marginTop: \"0px\", marginBottom: \"2px\" }}>{roles.Crew_role}</h4>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Top>\r\n                    <AddFavBtn><Button color='blue' style={{height: \"40px\"}} onClick={addOrRemoveFavourite}>Favourite</Button></AddFavBtn>\r\n                    <Header><h2>Filmography</h2></Header>\r\n                    <Scroll><ProgramCard programs={crewPrograms} /></Scroll>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Top = styled.div`\r\n    display: flex; \r\n    margin-top: 80px;\r\n    margin-left: 180px; \r\n`\r\nconst Title = styled.div`\r\n    margin-right: 0px; \r\n    margin-bottom: 20px; \r\n`\r\nconst Text = styled.div`\r\n    margin-left: 30px; \r\n    margin-top: 0px; \r\n    margin-bottom: 20px; \r\n`\r\nconst Text1 = styled.div`\r\n    margin-left: 30px; \r\n    margin-top: 0px; \r\n    margin-bottom: 5px; \r\n`\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 50px;\r\n`\r\nconst Image = styled.div` \r\n    margin-left: 90px; \r\n    margin-right: 0px;   \r\n`\r\nconst AddFavBtn = styled.div`\r\n    margin-left: 340px; \r\n    margin-top: 20px;\r\n`\r\n\r\n/*\r\n * References: \r\n * Making Scrollable sections within a page: \r\n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \r\n */\r\nconst Scroll = styled.div`\r\n    height: 400px; \r\n    overflow: hidden; \r\n    overflow-y: auto; \r\n`\r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Favourites.js",["147"],"import React, {useEffect, useState} from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport ProgramCard from '../../cards/ProgramCard'\r\nimport CrewCard from '../../cards/CrewCard'\r\nimport styled from 'styled-components'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function Favourites() {\r\n    const user = firebase.auth().currentUser\r\n    var userEmail = user.email\r\n\r\n    const [favCrew, setFavCrew] = useState([]);\r\n    const [favMovies, setFavMovies] = useState([]); \r\n    const [favTvshows, setFavTvshows] = useState([]); \r\n\r\n    useEffect(()=>{\r\n        fetch(`/userfavs?Email=${userEmail}`).then(response => \r\n            response.json()).then(data => { \r\n                setFavCrew(data['favouritecrew']); \r\n                setFavMovies(data['favouritemovies'])\r\n                setFavTvshows(data['favouriteshows'])\r\n            }); \r\n    }, []); \r\n    \r\n    return (\r\n        <>\r\n            <Dashboard/>\r\n            <Header>\r\n                <h1>My Favourite Crew</h1>\r\n            </Header>\r\n            <Scroll><CrewCard programCrew={favCrew}/></Scroll>\r\n            <Header2>\r\n                <h1>My Favourite Movies</h1>\r\n            </Header2>\r\n            <Scroll><ProgramCard programs={favMovies}/></Scroll>\r\n            <Header2>\r\n                <h1>My Favourite TV Shows</h1>\r\n            </Header2>\r\n            <Scroll><ProgramCard programs={favTvshows}/></Scroll>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 70px;\r\n`\r\nconst Header2 = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 50px;\r\n`\r\n\r\n/*\r\n * References: \r\n * Making Scrollable sections within a page: \r\n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \r\n */\r\nconst Scroll = styled.div`\r\n    height: 350px; \r\n    padding-bottom: 50px; \r\n    overflow: hidden; \r\n    overflow-y: auto; \r\n`","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\ProgramDetails.js",["148","149","150","151","152","153","154","155"],"import React, {useState, useEffect} from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport {Button} from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport CrewCard from '../../cards/CrewCard'\r\nimport ReviewCard from '../../cards/ReviewCard'\r\nimport AddReviewForm from '../../forms/AddReviewForm'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function ProgramDetails(props) {\r\n    const user = firebase.auth().currentUser\r\n    var userEmail = user.email \r\n    var Uid = props.location.state['Uid']\r\n    var favStatus; \r\n    var favPrograms = []\r\n\r\n    const [addReviewBtn, setAddReviewBtn] = useState(false); \r\n    const [programDetails, setProgramDetails] = useState([]);\r\n    const [programCrew, setProgramCrew] = useState([]); \r\n    const [programReviews, setProgramReviews] = useState([]); \r\n    const [userFavPrograms, setUserFavPrograms] = useState([]); \r\n    \r\n    //React JS - Toggle button: https://www.youtube.com/watch?v=artRW0PdPIY \r\n\r\n    /**API call to get all details of a program and will split and store into three separate arrays. */\r\n    useEffect(()=>{\r\n        fetch(`/programdetails?Uid=${Uid}`).then(response => \r\n            response.json()).then(data => { \r\n                setProgramDetails([data['programinfo']]); \r\n                setProgramCrew(data['programcrew'])\r\n                setProgramReviews(data['programreviews'])\r\n            }); \r\n    }, []); \r\n\r\n    //const [toggle, setToggle] = useState()\r\n    /**Geting all programs that the user has favourited used to set the content of the favourite button */\r\n    useEffect(()=>{\r\n        fetch(`/userfavs?Email=${userEmail}`).then(response => \r\n            response.json()).then(data => { \r\n                setUserFavPrograms([...data['favouriteshows'], ...data['favouritemovies']])\r\n            }); \r\n    }, []); \r\n\r\n    /**Getting the Uid of all the user favourited movies */\r\n    for (var i=0; i<userFavPrograms.length; i++){\r\n        favPrograms.push(userFavPrograms[i]['Uid'])\r\n    }\r\n\r\n    //Checking if the program has already been added to the user's favourite \r\n    if (favPrograms.includes(Uid)){\r\n        favStatus = true; \r\n    }\r\n    else {\r\n        favStatus = false; \r\n    } \r\n    \r\n    //console.log(favPrograms)\r\n    /*if (favPrograms.some(favs => favs.Uid === Uid)){\r\n        console.log(\"HIIII IM HEREEEEEE\") \r\n        initial = true\r\n        setToggle(initial)\r\n    }\r\n    else {\r\n        initial = false\r\n        console.log(\"NOTTTT HEREEEEEE\") \r\n        console.log(initial)\r\n        setToggle(initial)\r\n    }*/ \r\n    //const [toggle, setToggle] = useState(() \r\n    //console.log(toggle)\r\n    /**if (favPrograms.includes(Uid)){\r\n            console.log(\"HIIII IM HEREEEEEE\")\r\n            return false\r\n            //console.log(favBtnStatus)\r\n        }\r\n        else {\r\n            console.log(true)\r\n            return true\r\n           // console.log(favBtnStatus)\r\n        } */ \r\n   //console.log(toggle)\r\n\r\n    /** Favourite button even handler (handling button click) */\r\n    async function addOrRemoveFavourite(){\r\n        /*Request to add to user reviews  */\r\n        if (favStatus == false){ \r\n            const request = {\r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ Email: userEmail,  Uid: Uid, Cid: ''})\r\n            }\r\n            console.log(request)\r\n            const response = await fetch('/userfavs', request); \r\n            if (response.ok){\r\n                console.log('Added to favourites added')\r\n                alert('Program has been successfully added to your favourites')      \r\n            } else{\r\n                console.log('Not successful')\r\n            }\r\n            favStatus = true\r\n        }\r\n        else{\r\n            const request = {\r\n                method: 'DELETE', \r\n                headers: { 'Content-Type': 'application/json' },\r\n            }\r\n            const response = await fetch(`/userfavs?Email=${userEmail}&Uid=${Uid}`, request); \r\n            if (response.ok){\r\n                console.log('Removed from favourtes')\r\n                alert('Program has been successfully removed from your favourites')\r\n                console.log(response)\r\n            } else{\r\n                console.log('Remove not successful')\r\n            }\r\n            favStatus = false; \r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dashboard/>\r\n            <h1></h1>\r\n            {programDetails.map(details => {\r\n                if (details.Type == 'Movie'){\r\n                    return (\r\n                        <div>\r\n                        <Top>\r\n                            <Image><img style={{width: \"250px\", height: \"350px\"}} src={details.Image} alt=\"\"/></Image>\r\n                            <div style={{marginLeft: \"50px\"}}>\r\n                                <Title><h1>{details.Name}</h1></Title>\r\n                                <div>\r\n                                    <Text><h3>Type: {details.Type}</h3></Text>\r\n                                    <Text><h3>Age-Rating: {details.Age_rating}</h3></Text>\r\n                                    <Text><h3>Year: {details.Year}</h3></Text>\r\n                                    <Text><h3>Genre: {details.Genre}</h3></Text>\r\n                                    <Text><h3>Language: English</h3></Text>\r\n                                    <Text><h3>Duration: {details.Run_time}</h3></Text>\r\n                                    <Text><h3>Arrival Date: {details.Arrival_month} {details.Arrival_day}, {details.Arrival_year}</h3></Text>\r\n                                    <Text><h3>Departure Date: {details.Departure_month} {details.Departure_day}, {details.Departure_year}</h3></Text>\r\n                                </div>\r\n                            </div>\r\n                        </Top>\r\n                        <div style={{marginTop: \"0px\", float: \"left\"}}>\r\n                            <RatingText><h3>Rating: {details.User_rating}/10</h3></RatingText>\r\n                            {/*{toggle ? \"Remove From Favourites\" : \"Add To Favourites\"} */}\r\n                            <AddFavBtn><Button color='blue' onClick={addOrRemoveFavourite}>Favourite</Button></AddFavBtn>\r\n                        </div>\r\n                        <div style={{marginLeft: \"200px\", marginTop: \"-10px\"}}>\r\n                            <h3 style={{marginLeft: \"380px\"}}>Streaming Service:</h3>\r\n                            <Box style={{marginTop: \"0px\"}}>\r\n                                <Top>\r\n                                    <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"-160px\", marginTop: \"-50px\"}} src={details.Logo} alt=\"\"/>   \r\n                                    <div>\r\n                                        <Text style={{marginLeft: \"20px\", marginTop: \"-35px\"}}><h3>{details.Service_name}</h3></Text>\r\n                                    </div>\r\n                                </Top>\r\n                            </Box>\r\n                        </div>\r\n                        <Header><h2>Synopsis</h2></Header>\r\n                        <SynopText>\r\n                            <h4>{details.Description}</h4>\r\n                        </SynopText>\r\n                        <Header><h2>Crew</h2></Header>\r\n                        <Scroll><CrewCard programCrew={programCrew}/></Scroll>\r\n                        <Header><h2>Reviews <AddRevBtn><Button color='blue' onClick={() => setAddReviewBtn(true)}>Add Review</Button></AddRevBtn></h2></Header>  \r\n                        <ReviewCard programReviews={programReviews}/>\r\n                        {/*References opening a review popup form: Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */}\r\n                        <AddReviewForm trigger={addReviewBtn} setTrigger={setAddReviewBtn} Uid={Uid} userEmail={userEmail} onAddedReview={newReview => setProgramReviews(currentReviews => [...currentReviews, newReview])}/>\r\n                    </div>\r\n                )}\r\n                else if(details.Type == 'TV Show'){\r\n                    return(\r\n                        <div>\r\n                <Top>\r\n                    <Image><img style={{width: \"250px\", height: \"350px\"}} src={details.Image} alt=\"\"/></Image>\r\n                    <div style={{marginLeft: \"50px\"}}>\r\n                        <Title><h1>{details.Name}</h1></Title>\r\n                        <div>\r\n                            <Text><h3>Type: {details.Type}</h3></Text>\r\n                            <Text><h3>Age-Rating: {details.Age_rating}</h3></Text>\r\n                            <Text><h3>Year: {details.Year}</h3></Text>\r\n                            <Text><h3>Genre: {details.Genre}</h3></Text>\r\n                            <Text><h3>Language: English</h3></Text>\r\n                            <Text><h3>Number of Seasons: {details.No_of_seasons}</h3></Text>\r\n                            <Text><h3>Arrival Date: {details.Arrival_month} {details.Arrival_day}, {details.Arrival_year}</h3></Text>\r\n                            <Text><h3>Departure Date: {details.Departure_month} {details.Departure_day}, {details.Departure_year}</h3></Text>\r\n                        </div>\r\n                    </div>\r\n                </Top>\r\n                <div style={{marginTop: \"0px\", float: \"left\"}}>\r\n                    <RatingText><h3>Rating: {details.User_rating}/10</h3></RatingText>\r\n                    <AddFavBtn><Button color='blue' onClick={addOrRemoveFavourite}>Favourite</Button></AddFavBtn>\r\n                </div>\r\n                <div style={{marginLeft: \"200px\", marginTop: \"-10px\"}}>\r\n                    <h3 style={{marginLeft: \"380px\"}}>Streaming Service:</h3>\r\n                    <Box style={{marginTop: \"0px\"}}>\r\n                        <Top>\r\n                            <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"-160px\", marginTop: \"-50px\"}} src={details.Logo} alt=\"\"/>   \r\n                            <div>\r\n                                <Text style={{marginLeft: \"20px\", marginTop: \"-35px\"}}><h3>{details.Service_name}</h3></Text>\r\n                            </div>\r\n                        </Top>\r\n                    </Box>\r\n                </div>\r\n                <Header><h2>Synopsis</h2></Header>\r\n                <SynopText>\r\n                    <h4>{details.Description}</h4>\r\n                </SynopText>\r\n                <Header><h2>Crew</h2></Header>\r\n                <Scroll><CrewCard programCrew={programCrew}/></Scroll>\r\n                <Header><h2>Reviews <AddRevBtn><Button color='blue' onClick={() => setAddReviewBtn(true)}>Add Review</Button></AddRevBtn></h2></Header>\r\n                <ReviewCard programReviews={programReviews}/>\r\n                <AddReviewForm trigger={addReviewBtn} setTrigger={setAddReviewBtn} Uid={Uid} userEmail={userEmail} onAddedReview={newReview => setProgramReviews(currentReviews => [...currentReviews, newReview])}/>\r\n            </div>\r\n            )}})}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Box = styled.div`\r\n    margin-top: 30px; \r\n    margin-bottom: 20px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-item: center; \r\n    border-radius: 10px;\r\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \r\n    margin-left: 400px; \r\n    background: #DADADA;\r\n    height: 100px; \r\n    width: 300px; \r\n`\r\n\r\nconst Top = styled.div`\r\n    display: flex; \r\n    margin-top: 50px;\r\n    margin-left: 180px; \r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex; \r\n    margin-top: -40px;\r\n    margin-left: 10px; \r\n`\r\n\r\nconst Title = styled.div `\r\n    margin-right: 0px; \r\n    margin-bottom: 20px; \r\n`\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 30px;\r\n`\r\nconst Image = styled.div`\r\n    margin-left: 90px; \r\n    margin-right: 0px; \r\n`\r\nconst AddFavBtn = styled.div `\r\n    margin-left: 270px; \r\n    margin-top: 20px;\r\n`\r\n\r\nconst AddRevBtn = styled.div `\r\n    margin-left: 750px; \r\n`\r\n\r\n/*\r\n * References: \r\n * Making Scrollable sections within a page: \r\n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \r\n */\r\nconst Scroll = styled.div`\r\n    height: 300px; \r\n    padding-bottom: 50px; \r\n    overflow: hidden; \r\n    overflow-y: auto; \r\n`\r\n\r\nconst RatingText = styled.div `\r\n    margin-left: 270px; \r\n    margin-top: 20px;\r\n`\r\n\r\nconst Text = styled.div `\r\n    margin-left: 30px; \r\n    margin-top: 0px; \r\n    margin-bottom: 10px; \r\n`\r\n\r\nconst SynopText = styled.div `\r\n    margin-left: 270px; \r\n    margin-top: 10px; \r\n    width: 1010px; \r\n    display: flex; \r\n    justify-content: space-around; \r\n`","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\SideBarItem.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\firebase.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\ProgramCard.js",["156","157","158"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\CrewCard.js",["159"],"import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom';\r\nimport './Card.css'\r\n\r\n\r\nexport default function CrewCard({programCrew}){\r\n    let history = useHistory();\r\n\r\n    /**\r\n     * References: \r\n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \r\n     * To populate each card with information from card content object: \r\n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n     */\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Card style={{ width: '11rem'}} key={index} className=\"cCard\">\r\n                <Card.Img variant=\"top\" src={card.Image} style={{height: \"200px\"}} onClick={() => history.push('/crewdetails', {Cid: card.Cid})}/>\r\n                <Card.Body onClick={() => history.push('/crewdetails', {Cid: card.Cid})}>\r\n                    <Card.Text style={{height: '0rem', marginLeft:'-10px'}} className=\"cardTitle\">{card.Name}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        ); \r\n    }; \r\n    return <div className=\"grid\">{programCrew && programCrew.map(renderCard)}</div>; \r\n}; \r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\SubCard.js",["160","161"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function SubCard({services, userEmail, onRemovedService, adminStatus}){\r\n    \r\n    async function removeService(serviceName){\r\n        const request = {\r\n            method: 'DELETE', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ Email: userEmail, Service_name: serviceName})\r\n        }\r\n        const response = await fetch('/usersubscriptions', request); \r\n        if (response.ok){\r\n            console.log('Service has been removed')\r\n            alert('Service has been successfully removed')\r\n            onRemovedService(serviceName)\r\n        } else{\r\n            console.log('Not successful')\r\n        }\r\n    }\r\n    /**\r\n     * References: \r\n     * To populate each card with information from card content object: \r\n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\r\n     */\r\n    const renderCard = (card, index) => {\r\n        if(adminStatus == false){\r\n            return (\r\n                <div>\r\n                    <Box>\r\n                        <Top>\r\n                            <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"20px\", marginTop: \"15px\"}} src={card.Logo} alt=\"\"/>   \r\n                            <div>\r\n                                <h3 style={{marginTop: \"15px\", marginLeft: \"15px\", marginBottom: \"0px\"}}>{card.Service_name}</h3>\r\n                                <Text>\r\n                                    <h6>{card.Location}</h6>\r\n                                    <h6>{card.Price} /month</h6>\r\n                                </Text>\r\n                            </div>\r\n                        </Top>\r\n                        <RemoveLink><Link onClick={() => removeService(card.Service_name)}>Remove Subscription</Link></RemoveLink>\r\n                    </Box>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Box>\r\n                        <Top>\r\n                            <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"20px\", marginTop: \"15px\"}} src={card.Logo} alt=\"\"/>   \r\n                            <div>\r\n                                <h3 style={{marginTop: \"15px\", marginLeft: \"15px\", marginBottom: \"0px\"}}>{card.Service_name}</h3>\r\n                                <Text>\r\n                                    <h6>{card.Location}</h6>\r\n                                    <h6>{card.Price} /month</h6>\r\n                                </Text>\r\n                            </div>\r\n                        </Top>\r\n                    </Box>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return <div>{services.map(renderCard)}</div>; \r\n}; \r\n\r\n/*\r\n * References: \r\n *  To create box for every subscription service: \r\n *      Build a Recipe App With React | React Tutorial For Beginners https://www.youtube.com/watch?v=U9T6YkEDkMo&list=PLDyQo7g0_nsVHmyZZpVJyFn5ojlboVEhE&index=2 */\r\nconst Box = styled.div`\r\n    margin-top: 30px; \r\n    margin-bottom: 20px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-item: center; \r\n    border-radius: 10px;\r\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \r\n    margin-left: 400px; \r\n    background: #DADADA;\r\n    height: 140px; \r\n    width: 800px; \r\n`\r\nconst Top = styled.div`\r\n    display: flex;  \r\n    margin-bottom: 0px; \r\n`\r\nconst Text = styled.div`\r\n    margin-left: 30px; \r\n    margin-top: 15px; \r\n`\r\n/**650 */\r\nconst RemoveLink = styled(Link) `\r\n    margin-left: 650px; \r\n`","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\ReviewCard.js",[],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\forms\\AddServiceForm.js",["162","163","164","165","166","167"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\forms\\AddReviewForm.js",["168"],"import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {Form, Input, Rating, Button} from 'semantic-ui-react'\r\n\r\nexport default function AddReviewForm(props){\r\n    const [userRating, setUserRating] = useState(0)\r\n    const [review, setReview] = useState('')\r\n    var obj; \r\n    var Uid = props.Uid\r\n    var Email = props.userEmail \r\n\r\n    function closeReview(){\r\n        props.setTrigger(false)\r\n        setUserRating(0)\r\n        setReview('') \r\n    }\r\n\r\n    /*\r\n     * Creating request object and getting reponse from API after adding a user review to a certain movie \r\n     * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\r\n     */\r\n    async function submitReview(){\r\n        if (review == ''){\r\n            console.log('error! Description cannot be empty')\r\n            alert('Description field cannot be empty!')\r\n        } \r\n        else{\r\n            const request = {\r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ Uid: Uid, Email: Email, Rating: userRating, Description: review})\r\n            }\r\n            // Referenced: Handling response status using fetch in react JS\r\n            await fetch('/userreview', request).then(response => {\r\n                if (response.ok){\r\n                    return response.json()\r\n                }\r\n            }).then(data => { \r\n                console.log(data)\r\n                obj = data\r\n                }); \r\n            props.onAddedReview({Author: obj['Username'], Date: obj['Date'], Description: review, Rating: userRating})\r\n            props.setTrigger(false)\r\n            setUserRating(0)\r\n            setReview('')   \r\n        }    \r\n    }\r\n    /*References: \r\n        * Creating a add review popup form where users can add a review: \r\n            * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\r\n    return (props.trigger)?(\r\n        <Popup>\r\n            <ReviewForm>\r\n                <Form>\r\n                    <Top>\r\n                        <h2 style={{width: \"300px\"}}>Add a review</h2>\r\n                        <CloseBtn><Button variant=\"default\" onClick={closeReview} icon='close'/></CloseBtn>\r\n                    </Top>\r\n                    <Form.Field>\r\n                        <Rating size=\"huge\" icon='star' maxRating={5} value={userRating} onRate={(_, data) => {setUserRating(data.rating)}}/> \r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Input placeholder=\"Write your review here\" value={review} onChange={event => setReview(event.target.value)}/>\r\n                    </Form.Field>\r\n                    <SubmitBtn><Button color='blue' variant=\"default\" onClick={submitReview}>Submit</Button></SubmitBtn>\r\n                </Form>\r\n                {props.children}    \r\n            </ReviewForm>             \r\n        </Popup>\r\n    ) : \"\"; \r\n}; \r\n\r\nconst Popup = styled.div `\r\n    display: flex; \r\n    justify-content: center; \r\n    align-items: center; \r\n    position: fixed; \r\n    top: 0; \r\n    left: 0; \r\n    width: 100%; \r\n    height: 100vh;  \r\n    background-color: rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst ReviewForm = styled.div `\r\n    position: relative; \r\n    width: 700px; \r\n    padding: 10px;  \r\n    background-color: white; \r\n    border-radius: 10px;\r\n`\r\n\r\nconst Top = styled.div`\r\n    display: flex;  \r\n    margin-bottom: 0px; \r\n`\r\n\r\nconst CloseBtn = styled.div`\r\n    margin-top: 0px; \r\n    margin-bottom: 10px;  \r\n    margin-left: 400px;   \r\n`\r\nconst SubmitBtn = styled.div`\r\n    margin-top = 10px;  \r\n    margin-left: 590px;\r\n`","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\Schedule.js",["169"],"import React, {useState, useEffect} from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport ProgramCard from '../../cards/ProgramCard'\r\nimport styled from 'styled-components'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function Schedule() {\r\n    const user = firebase.auth().currentUser\r\n    var userEmail = user.email\r\n\r\n    const [admins, setAdmins] = useState([])\r\n    const [userComingPrograms, setUserComingPrograms] = useState([])\r\n    const [userLeavingPrograms, setUserLeavingPrograms] = useState([])\r\n    const [allComingPrograms, setAllComingPrograms] = useState([])\r\n    const [allLeavingPrograms, setAllLeavingPrograms] = useState([])\r\n\r\n    //Getting list of all admin emails from API call \r\n    useEffect(() => {\r\n        fetch(`/admin`).then(response =>\r\n            response.json()).then(data => {\r\n                setAdmins(data);\r\n            });\r\n    }, []);\r\n\r\n    // Getting programs that are coming are leaving soon that are offered by services the user logged in is subscribed \r\n    //to from API call (will be used when user is not an admin)\r\n    useEffect(() => {\r\n        fetch(`/userprogramschedule?Email=${userEmail}`).then(response =>\r\n            response.json()).then(data => {\r\n                setUserComingPrograms(data['comingsoon']);\r\n                setUserLeavingPrograms(data['leavingsoon']);\r\n            });\r\n    }, []);\r\n\r\n    // Getting all programs that are coming are leaving soon that are offered by services from API call (will be used when user is an admin)\r\n    useEffect(() => {\r\n        fetch(`/allprogramschedule`).then(response =>\r\n            response.json()).then(data => {\r\n                setAllComingPrograms(data['comingsoon']);\r\n                setAllLeavingPrograms(data['leavingsoon']);\r\n            });\r\n    }, []);\r\n\r\n    // Checking if user logged in is an admin and display the corresponding results \r\n    if (!(admins.some(admin => admin.Email === userEmail))){\r\n        return (\r\n            <>\r\n                <Dashboard/>\r\n                <Header>\r\n                    <h1 >Coming Soon</h1>\r\n                </Header>\r\n                <Scroll><ProgramCard programs={userComingPrograms}/></Scroll>\r\n                <Header2>\r\n                    <h1>Leaving Soon</h1>\r\n                </Header2>\r\n                <Scroll><ProgramCard programs={userLeavingPrograms}/></Scroll>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <Dashboard/>\r\n                <Header>\r\n                    <h1 >Coming Soon</h1>\r\n                </Header>\r\n                <Scroll><ProgramCard programs={allComingPrograms}/></Scroll>\r\n                <Header2>\r\n                    <h1>Leaving Soon</h1>\r\n                </Header2>\r\n                <Scroll><ProgramCard programs={allLeavingPrograms}/></Scroll>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 70px;\r\n`\r\nconst Header2 = styled.div`\r\n    margin-left: 240px; \r\n    margin-top: 50px;\r\n`\r\n\r\n/*\r\n * References: \r\n * Making Scrollable sections within a page: \r\n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \r\n */\r\nconst Scroll = styled.div`\r\n    height: 400px; \r\n    overflow: hidden; \r\n    overflow-y: auto; \r\n`\r\n","C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\dashboard\\pages\\SearchPage.js",["170"],"C:\\Users\\Tiffa\\CPSC471_2\\Movies-R-Us\\src\\components\\cards\\UserCard.js",["171","172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":17},{"ruleId":"177","severity":1,"message":"181","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"182","line":5,"column":17,"nodeType":"179","messageId":"180","endLine":5,"endColumn":22},{"ruleId":"177","severity":1,"message":"183","line":12,"column":13,"nodeType":"179","messageId":"180","endLine":12,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":42,"column":8,"nodeType":"186","endLine":42,"endColumn":10,"suggestions":"187"},{"ruleId":"177","severity":1,"message":"188","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":24,"column":8,"nodeType":"186","endLine":24,"endColumn":10,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"190","line":76,"column":7,"nodeType":"179","messageId":"180","endLine":76,"endColumn":16},{"ruleId":"177","severity":1,"message":"191","line":105,"column":7,"nodeType":"179","messageId":"180","endLine":105,"endColumn":11},{"ruleId":"177","severity":1,"message":"192","line":8,"column":13,"nodeType":"179","messageId":"180","endLine":8,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":36,"column":8,"nodeType":"186","endLine":36,"endColumn":10,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"185","line":37,"column":8,"nodeType":"186","endLine":37,"endColumn":10,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"195","line":27,"column":19,"nodeType":"179","messageId":"180","endLine":27,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":37,"column":8,"nodeType":"186","endLine":37,"endColumn":10,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"185","line":42,"column":8,"nodeType":"186","endLine":42,"endColumn":10,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":56,"column":191,"nodeType":"200","messageId":"201","endLine":56,"endColumn":193},{"ruleId":"184","severity":1,"message":"202","line":30,"column":8,"nodeType":"186","endLine":30,"endColumn":10,"suggestions":"203"},{"ruleId":"184","severity":1,"message":"185","line":37,"column":8,"nodeType":"186","endLine":37,"endColumn":10,"suggestions":"204"},{"ruleId":"198","severity":1,"message":"205","line":54,"column":23,"nodeType":"200","messageId":"201","endLine":54,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":25,"column":8,"nodeType":"186","endLine":25,"endColumn":10,"suggestions":"206"},{"ruleId":"184","severity":1,"message":"207","line":35,"column":8,"nodeType":"186","endLine":35,"endColumn":10,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"185","line":44,"column":8,"nodeType":"186","endLine":44,"endColumn":10,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"205","line":88,"column":23,"nodeType":"200","messageId":"201","endLine":88,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":124,"column":13,"nodeType":"212","endLine":124,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":125,"column":41,"nodeType":"215","messageId":"216","endLine":125,"endColumn":43},{"ruleId":"198","severity":1,"message":"205","line":126,"column":34,"nodeType":"200","messageId":"201","endLine":126,"endColumn":36},{"ruleId":"198","severity":1,"message":"205","line":173,"column":38,"nodeType":"200","messageId":"201","endLine":173,"endColumn":40},{"ruleId":"177","severity":1,"message":"217","line":243,"column":7,"nodeType":"179","messageId":"180","endLine":243,"endColumn":16},{"ruleId":"177","severity":1,"message":"218","line":2,"column":9,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"188","line":2,"column":15,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":18,"column":13,"nodeType":"212","endLine":18,"endColumn":119},{"ruleId":"177","severity":1,"message":"188","line":2,"column":15,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"177","severity":1,"message":"221","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"205","line":28,"column":24,"nodeType":"200","messageId":"201","endLine":28,"endColumn":26},{"ruleId":"177","severity":1,"message":"222","line":1,"column":26,"nodeType":"179","messageId":"180","endLine":1,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":18,"column":33,"nodeType":"215","messageId":"225","endLine":18,"endColumn":109},{"ruleId":"198","severity":1,"message":"205","line":28,"column":71,"nodeType":"200","messageId":"201","endLine":28,"endColumn":73},{"ruleId":"198","severity":1,"message":"205","line":37,"column":21,"nodeType":"200","messageId":"201","endLine":37,"endColumn":23},{"ruleId":"198","severity":1,"message":"205","line":49,"column":83,"nodeType":"200","messageId":"201","endLine":49,"endColumn":85},{"ruleId":"198","severity":1,"message":"199","line":51,"column":69,"nodeType":"200","messageId":"201","endLine":51,"endColumn":71},{"ruleId":"198","severity":1,"message":"205","line":23,"column":20,"nodeType":"200","messageId":"201","endLine":23,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":35,"column":8,"nodeType":"186","endLine":35,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":39,"column":14,"nodeType":"179","messageId":"229","endLine":39,"endColumn":15},{"ruleId":"177","severity":1,"message":"221","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"230","line":59,"column":7,"nodeType":"179","messageId":"180","endLine":59,"endColumn":17},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Label' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userEmail'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'Button' is defined but never used.",["234"],"'ChangeBtn' is assigned a value but never used.","'Info' is assigned a value but never used.","'resetPassword' is assigned a value but never used.",["235"],["236"],"'setError' is assigned a value but never used.",["237"],["238"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'Cid' and 'props.location.state'. Either include them or remove the dependency array.",["239"],["240"],"Expected '===' and instead saw '=='.",["241"],"React Hook useEffect has a missing dependency: 'Uid'. Either include it or remove the dependency array.",["242"],["243"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is assigned a value but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs",["244"],"no-redeclare","'i' is already defined.","redeclared","'RemoveLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"245","fix":"248"},{"desc":"245","fix":"249"},{"desc":"245","fix":"250"},{"desc":"245","fix":"251"},{"desc":"252","fix":"253"},{"desc":"245","fix":"254"},{"desc":"245","fix":"255"},{"desc":"256","fix":"257"},{"desc":"245","fix":"258"},{"desc":"245","fix":"259"},"Update the dependencies array to be: [userEmail]",{"range":"260","text":"261"},{"range":"262","text":"261"},{"range":"263","text":"261"},{"range":"264","text":"261"},{"range":"265","text":"261"},{"range":"266","text":"261"},"Update the dependencies array to be: [Cid, props.location.state]",{"range":"267","text":"268"},{"range":"269","text":"261"},{"range":"270","text":"261"},"Update the dependencies array to be: [Uid]",{"range":"271","text":"272"},{"range":"273","text":"261"},{"range":"274","text":"261"},[1411,1413],"[userEmail]",[749,751],[1317,1319],[1318,1320],[1305,1307],[1391,1393],[1090,1092],"[Cid, props.location.state]",[1310,1312],[892,894],[1438,1440],"[Uid]",[1851,1853],[1398,1400]]