[{"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/index.js":"1","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/App.js":"2","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/PrivateRoute.js":"3","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/contexts/AuthContext.js":"4","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/Login.js":"5","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/ForgotPassword.js":"6","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Home.js":"7","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Trending.js":"8","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/Dashboard.js":"9","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/SignUp.js":"10","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Subscriptions.js":"11","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Profile.js":"12","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/TVShows.js":"13","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/CrewDetails.js":"14","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Favourites.js":"15","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProgramDetails.js":"16","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Movies.js":"17","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/firebase.js":"18","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/SideBarItem.js":"19","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/CrewCard.js":"20","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ProgramCard.js":"21","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/SubCard.js":"22","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ReviewCard.js":"23","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/forms/AddServiceForm.js":"24","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/forms/AddReviewForm.js":"25","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js":"26"},{"size":295,"mtime":1618176170220,"results":"27","hashOfConfig":"28"},{"size":2344,"mtime":1618425481259,"results":"29","hashOfConfig":"28"},{"size":460,"mtime":1618176170216,"results":"30","hashOfConfig":"28"},{"size":1183,"mtime":1616355791972,"results":"31","hashOfConfig":"28"},{"size":2033,"mtime":1616355423665,"results":"32","hashOfConfig":"28"},{"size":1959,"mtime":1618424328654,"results":"33","hashOfConfig":"28"},{"size":1001,"mtime":1618176293008,"results":"34","hashOfConfig":"28"},{"size":1016,"mtime":1618176293009,"results":"35","hashOfConfig":"28"},{"size":4269,"mtime":1618424328652,"results":"36","hashOfConfig":"28"},{"size":2853,"mtime":1618424601669,"results":"37","hashOfConfig":"28"},{"size":1957,"mtime":1618424328653,"results":"38","hashOfConfig":"28"},{"size":4023,"mtime":1618456141108,"results":"39","hashOfConfig":"28"},{"size":1144,"mtime":1618424328653,"results":"40","hashOfConfig":"28"},{"size":2942,"mtime":1618456140064,"results":"41","hashOfConfig":"28"},{"size":1812,"mtime":1618424328652,"results":"42","hashOfConfig":"28"},{"size":13032,"mtime":1618424328653,"results":"43","hashOfConfig":"28"},{"size":1274,"mtime":1618430548683,"results":"44","hashOfConfig":"28"},{"size":573,"mtime":1618176170220,"results":"45","hashOfConfig":"28"},{"size":1503,"mtime":1618176293007,"results":"46","hashOfConfig":"28"},{"size":1183,"mtime":1618424328650,"results":"47","hashOfConfig":"28"},{"size":1120,"mtime":1618424328651,"results":"48","hashOfConfig":"28"},{"size":2755,"mtime":1618424328651,"results":"49","hashOfConfig":"28"},{"size":2179,"mtime":1618424328651,"results":"50","hashOfConfig":"28"},{"size":4049,"mtime":1618424328654,"results":"51","hashOfConfig":"28"},{"size":3436,"mtime":1618424328654,"results":"52","hashOfConfig":"28"},{"size":5625,"mtime":1618517455478,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"zqlezc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/index.js",[],["121","122"],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/App.js",["123"],"import React from \"react\"\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport Dashboard from \"./dashboard/Dashboard\"\nimport SignUp from \"./login/SignUp\"\nimport Login from \"./login/Login\"\nimport ForgotPassword from \"./login/ForgotPassword\"\n\nimport Home from \"./dashboard/pages/Home\"\nimport Profile from \"./dashboard/pages/Profile\"\nimport ProfileEdit from \"./dashboard/pages/ProfileEdit\"\nimport Movies from \"./dashboard/pages/Movies\"\nimport TVShows from \"./dashboard/pages/TVShows\"\nimport Subscriptions from \"./dashboard/pages/Subscriptions\"\nimport Trending from \"./dashboard/pages/Trending\"\nimport Favourites from \"./dashboard/pages/Favourites\"\nimport CrewDetails from \"./dashboard/pages/CrewDetails\"\nimport ProgramDetails from \"./dashboard/pages/ProgramDetails\"\n\nfunction App() {\n  return (\n\n    <Router>\n      <AuthProvider>\n        <Switch>\n          {/*<PrivateRoute exact path=\"/\" component={Dashboard} />*/}\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n          <PrivateRoute exact path=\"/profile-edit\" component={ProfileEdit} />\n          <PrivateRoute exact path=\"/movies\" component={Movies} />\n          <PrivateRoute exact path=\"/tvshows\" component={TVShows} />\n          <PrivateRoute exact path=\"/subscriptions\" component={Subscriptions} />\n          <PrivateRoute exact path=\"/trending\" component={Trending} />\n          <PrivateRoute exact path=\"/favourites\" component={Favourites} />\n          <PrivateRoute exact path=\"/crewdetails\" component={CrewDetails} />\n          <PrivateRoute exact path=\"/programdetails\" component={ProgramDetails} />\n          <Container\n            className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: \"100vh\" }}\n          >\n            <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </div>\n          </Container>\n        </Switch>\n      </AuthProvider>\n    </Router>\n\n  )\n}\n\nexport default App;\n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/PrivateRoute.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/contexts/AuthContext.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/Login.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/ForgotPassword.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Home.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Trending.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/Dashboard.js",["124","125"],"import React, { useState } from 'react'\nimport { Nav, Navbar, Form, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Input, Label, Menu, Button, Divider } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nimport SideBarItem from \"./SideBarItem\"\n\nexport default function Dashboard() {\n    const [error, setError] = useState(\"\")\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n        setError('')\n\n        try {\n            await logout()\n            history.pushState('/login')\n        } catch {\n            setError('Failed to log out')\n        }\n    }\n    return (\n        <Container>\n            <Header>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                <Navbar expand=\"lg\">\n                    <Navbar.Brand href=\"/\">MOVIESRUS</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Form className=\"form-search\">\n                        <Input icon=\"search\" placeholder=\"Search...\" />\n                    </Form>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <ProfileLink>\n                                <Nav.Item><Link to=\"/profile\">Profile</Link></Nav.Item>\n                            </ProfileLink>\n                            <Nav.Item>\n                                <Button primary class=\"logoutBtn\" variant=\"link\" onClick={handleLogout}>Logout</Button>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </Header>\n            <StyledSideNav>\n                <Menu borderless vertical stackable fixed=\"left\" className=\"side-nav\">\n                    <SideBarItem path='/' label='Home' icon='home' />\n                    <SideBarItem path='/movies' label='Movies' icon='film' />\n                    <SideBarItem path='/tvshows' label='Television' icon='tv' />\n                    {/*<SideBarItem path='schedule' label='Schedule' icon='calendar alternate outline' />\n                    <SideBarItem path='/trending' label='Trending' icon='fire' />*/}\n                    <Divider />\n                    <SidebarHeader>Library</SidebarHeader>\n                    {/**SideBarItem label='History' icon='history' />\n                    <SideBarItem path='Watch later' label='Watch later' icon='clock' />*/}\n                    <SideBarItem path='favourites' label='Favourites' icon='favorite' />\n                    <Divider />\n                    <SideBarItem path='/subscriptions' label='Subscriptions' icon='shopping cart' />\n                    <Divider />\n                    {/*<SideBarItem path='Help' label='Help' icon='help circle' />\n                    <SideBarItem path='Send Feedback' label='Send feedback' icon='comment' />*/}\n                </Menu>\n            </StyledSideNav>\n        </Container>\n    )\n}\n\n\nconst Container = styled.div``;\n\nconst Header = styled.div`\n    .navbar { \n    background-color: #222; \n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    }\n    .navbar-brand {\n        font-size: 1.4em;\n        color: #9FFFCB;\n        margin-left: 40px;\n        font-weight: bold;\n        &:hover { color: white; }\n    }\n    .form-search {\n        position: absolute !important;\n        left: 15%;\n        right: 55%;\n    }\n`;\n\nconst StyledSideNav = styled.div`\n    position: fixed;     \n    height: 100%;\n    width: 220px;     \n    z-index: 1;      \n    top: 3.4em;      \n    background-color: #222; \n    overflow-x: hidden;     \n    padding-top: 10px;\n\n    .ui.menu.fixed.side-nav {\n        background-color: #f5f5f5;\n        margin-left: 10px;\n        margin-top: 50px;\n        overflow-y: auto;\n        padding-bottom: 64px;\n\n        .sidebar-item:hover {\n            background: #ebebeb;\n            }\n        }\n\n        .side-nav.ui.vertical.menu {\n            width: 200px;\n        }\n`;\n\nconst SidebarHeader = styled.text`\n    font-size: 20px;\n    font-weight: bold;\n    padding-left: 5px;\n`;\n\nconst ProfileLink = styled.text`\n    padding: 10px 10px 0 0;\n`;","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/login/SignUp.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Subscriptions.js",["126","127"],"import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {Button} from 'react-bootstrap'\nimport Dashboard from '../Dashboard'\nimport SubCard from '../../cards/SubCard'\nimport AddServiceForm from '../../forms/AddServiceForm'\n\nexport default function Subscriptions() {\n    //Need to pass in email of user logged in \n    var userEmail = 'michael.miller@email.com'\n\n    const [addServiceBtn, setAddServiceBtn] = useState(false); \n    const [userSubs, setUserSubs] = useState([]); \n    const [allServices, setAllServices] = useState([])\n\n    useEffect(()=>{\n        fetch('/services').then(response => \n            response.json()).then(data => { \n                setAllServices(data)\n            }); \n    }, []); \n\n    useEffect(()=>{\n        fetch(`/usersubscriptions?Email=${userEmail}`).then(response => \n            response.json()).then(data => { \n                setUserSubs(data); \n            }); \n    }, []); \n\n\n    /**References: How to update UI when adding and removing services:  \n     *  * How to Call a Flask API in React: https://www.youtube.com/watch?v=06pWsB_hoD4\n    */\n    return (\n        <>\n        <Dashboard/>\n        <Header>\n            <h1 className=\"pageHeader\">My Subscriptions</h1>\n        </Header>\n        <AddBtn><Button onClick={() => setAddServiceBtn(true)}>Add Service</Button></AddBtn>\n        <SubCard services={userSubs} userEmail={userEmail} onRemovedService={serviceRemoved => setUserSubs(userSubs.filter(service => service['Service_name'] != serviceRemoved))}/>\n        <AddServiceForm trigger={addServiceBtn} setTrigger={setAddServiceBtn} userEmail={userEmail} userServices={userSubs} allServices={allServices} onAddedService={newService => setUserSubs(currentServices => [...currentServices, newService])}/>\n    </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 70px;\n`\nconst AddBtn = styled.div `\n    margin-left: 1000px; \n    margin-top: 10px;\n`\n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Profile.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useState, useEffect } from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport Dashboard from '../Dashboard'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Details } from '@material-ui/icons';\n\nexport default function Profile() {\n    var user = firebase.auth().currentUser;\n    var userEmail = user.email;\n\n    const [userDetails, setUserDetails] = useState([]);\n\n    useEffect(() => {\n        fetch(`/profile?Email=${userEmail}`).then(response =>\n            response.json()).then(data => {\n                console.log(data)\n                setUserDetails([data['userInfo']])\n\n            });\n    }, []);\n\n    return (\n        <>\n            <Dashboard />\n            {userDetails.map(details => (\n                <div>\n                    <Header>\n                        <h1 className=\"pageHeader\">My Profile</h1>\n                    </Header>\n\n                    <div>\n                        <Image>\n                            <img style={{ width: \"160px\", height: \"160px\" }} src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/fb/UofCCoat.svg/1200px-UofCCoat.svg.png\" alt=\"\" />\n                        </Image>\n                        <Email><h2>{userEmail}</h2></Email>\n                        <ChangeBtn><Button>Change Password</Button></ChangeBtn>\n                        <Box1>\n                            <Title>\n                                <h3>Pesonal Information </h3>\n                            </Title>\n                            <Text>\n                                <h6>Name: {details.Name}</h6>\n                                <h6>Username: {details.Username}</h6>\n                                <h6>Age: {details.Age}</h6>\n                                <h6>Gender: {details.Gender}</h6>\n                                <h6>Languages: {details.Language}</h6>\n                                <h6 style={{ marginLeft: \"30px\" }}>English</h6>\n                                <h6 style={{ marginLeft: \"30px\" }}>French</h6>\n                            </Text>\n\n                            <EditLink><Link to=\"/profile-edit\">Edit Information</Link></EditLink>\n                        </Box1>\n                        {/*<Box2>\n                    <Title>\n                        <h3>Languages</h3>\n                    </Title>\n                    <Text>\n                        <h6>English</h6>\n                        <h6>French</h6>\n                    </Text>\n                    <EditLink><Link>Edit Languages</Link></EditLink>\n                </Box2>*/}\n                    </div>\n                </div>\n            ))}\n        </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 10px;\n`\nconst Image = styled.div` \n    border-radius: 80px; \n    margin-left: 700px; \n    margin-top: 50px;\n`\n\nconst Email = styled.div`\n    margin-left: 680px; \n    margin-top: 10px;\n`\nconst ChangeBtn = styled.div`\n    margin-left: 1000px; \n    margin-top: 20px;\n`\n\n/**Build a Recipe App With React | React Tutorial For Beginners https://www.youtube.com/watch?v=U9T6YkEDkMo&list=PLDyQo7g0_nsVHmyZZpVJyFn5ojlboVEhE&index=2 */\nconst Box1 = styled.div`\n    margin-top: 50px; \n    border-radius: 10px;\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \n    margin-left: 400px; \n    background: white;\n    height: 260px; \n    width: 800px; \n`\n\nconst Box2 = styled.div`\n    margin-top: 50px; \n    border-radius: 10px;\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \n    margin-left: 400px; \n    background: white;\n    min-height: 120px; \n    width: 800px; \n`\n\n/**Build a Recipe App With React | React Tutorial For Beginners https://www.youtube.com/watch?v=U9T6YkEDkMo&list=PLDyQo7g0_nsVHmyZZpVJyFn5ojlboVEhE&index=2 */\n\nconst Title = styled.div`\n    margin-top: 30px;\n    margin-left: 20px;\n`\nconst Text = styled.div`\n    margin-top: 20px;\n    margin-left: 40px;\n`\nconst EditLink = styled(Link)`\n    margin-left: 650px; \n`\nconst Info = styled.div`\n\n`;","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/TVShows.js",["145"],"import React, {useEffect, useState} from 'react'\nimport Dashboard from '../Dashboard'\nimport ProgramCard from '../../cards/ProgramCard'\nimport styled from 'styled-components'\n\nexport default function TVShows() {\n    //Need to pass in email of user logged in \n    var userEmail = 'jonathan.smith@email.com'\n    /**\n     * References: \n     *  * How to call an api endpoint and get the data to pass to Program card component \n     *      * How to Call a Flask API in React https://www.youtube.com/watch?v=06pWsB_hoD4&t=0s\n     */\n    const [programs, setTvshows] = useState([]); \n\n    useEffect(()=>{\n        fetch(`/programs?Type=TV Show&Email=${userEmail}`).then(response => \n            response.json()).then(data => { \n                setTvshows(data); \n            }); \n    }, []); \n    return (\n        <>\n            <Dashboard/>\n            <Header>\n                <h1 className=\"pageHeader\">TV Shows</h1>\n            </Header>\n            {/*Passing the object to the ProgramCard component*/}\n            <ProgramCard programs={programs}/>\n        </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 10px;\n`","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/CrewDetails.js",["146"],"import React, { useState, useEffect } from 'react'\nimport Dashboard from '../Dashboard'\nimport { Button } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport ProgramCard from '../../cards/ProgramCard'\n\nexport default function CrewDetails(props) {\n    const [crewDetails, setCrewDetails] = useState([])\n    const [crewPrograms, setCrewPrograms] = useState([])\n    const [crewRoles, setCrewRoles] = useState([])\n\n    var Cid = props.location.state['Cid']\n\n    useEffect(() => {\n        fetch(`/crewdetails?Cid=${Cid}`).then(response =>\n            response.json()).then(data => {\n                setCrewDetails([data['crewinfo']])\n                setCrewPrograms(data['crewprograms'])\n                setCrewRoles(data['crewroles'])\n                console.log(props.location.state['Cid'])\n            });\n    }, []);\n\n    return (\n        <>\n            <Dashboard />\n            {crewDetails.map(details => (\n                <div>\n                    <Top>\n                        <Image><img style={{ width: \"200px\", height: \"300px\" }} src={details.Image} alt=\"\" /></Image>\n                        <div style={{ marginLeft: \"50px\" }}>\n                            <Title><h1>{details.Name}</h1></Title>\n                            <div>\n                                <Text><h3>Gender: {details.Name}</h3></Text>\n                                <Text><h3>Hometown: {details.Hometown}</h3></Text>\n                                <Text1><h3>Roles:</h3></Text1>\n                                {crewRoles.map(roles => (\n                                    <h4 style={{ marginLeft: \"50px\", marginTop: \"0px\", marginBottom: \"2px\" }}>{roles.Crew_role}</h4>\n                                ))}\n                            </div>\n                        </div>\n                    </Top>\n                    <AddFavBtn><Button>Add To Favourites</Button></AddFavBtn>\n                    <Header><h2>Filmography</h2></Header>\n                    <Scroll><ProgramCard programs={crewPrograms} /></Scroll>\n                </div>\n            ))}\n        </>\n    )\n}\n\nconst Top = styled.div`\n    display: flex; \n    margin-top: 80px;\n    margin-left: 180px; \n`\nconst Title = styled.div`\n    margin-right: 0px; \n    margin-bottom: 20px; \n`\nconst Text = styled.div`\n    margin-left: 30px; \n    margin-top: 0px; \n    margin-bottom: 20px; \n`\nconst Text1 = styled.div`\n    margin-left: 30px; \n    margin-top: 0px; \n    margin-bottom: 5px; \n`\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 50px;\n`\nconst Image = styled.div` \n    margin-left: 90px; \n    margin-right: 0px;   \n`\nconst AddFavBtn = styled.div`\n    margin-left: 270px; \n    margin-top: 20px;\n`\n\n/*\n * References: \n * Making Scrollable sections within a page: \n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \n */\nconst Scroll = styled.div`\n    height: 400px; \n    overflow: hidden; \n    overflow-y: auto; \n`\n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Favourites.js",["147"],"import React, {useEffect, useState} from 'react'\nimport Dashboard from '../Dashboard'\nimport ProgramCard from '../../cards/ProgramCard'\nimport CrewCard from '../../cards/CrewCard'\nimport styled from 'styled-components'\n\nexport default function Favourites() {\n    //Need to pass in email of user logged in \n    var userEmail = 'dennis.scott@email.com'\n\n    const [favCrew, setFavCrew] = useState([]);\n    const [favMovies, setFavMovies] = useState([]); \n    const [favTvshows, setFavTvshows] = useState([]); \n\n    useEffect(()=>{\n        fetch(`/userfavs?Email=${userEmail}`).then(response => \n            response.json()).then(data => { \n                setFavCrew(data['favouritecrew']); \n                setFavMovies(data['favouritemovies'])\n                setFavTvshows(data['favouriteshows'])\n            }); \n    }, []); \n    \n    return (\n        <>\n            <Dashboard/>\n            <Header>\n                <h1>My Favourite Crew</h1>\n            </Header>\n            <Scroll><CrewCard programCrew={favCrew}/></Scroll>\n            <Header2>\n                <h1>My Favourite Movies</h1>\n            </Header2>\n            <Scroll><ProgramCard programs={favMovies}/></Scroll>\n            <Header2>\n                <h1>My Favourite TV Shows</h1>\n            </Header2>\n            <Scroll><ProgramCard programs={favTvshows}/></Scroll>\n        </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 70px;\n`\nconst Header2 = styled.div`\n    margin-left: 240px; \n    margin-top: 50px;\n`\n\n/*\n * References: \n * Making Scrollable sections within a page: \n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \n */\nconst Scroll = styled.div`\n    height: 350px; \n    padding-bottom: 50px; \n    overflow: hidden; \n    overflow-y: auto; \n`","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProgramDetails.js",["148","149","150","151","152","153","154","155"],"import React, {useState, useEffect} from 'react'\nimport Dashboard from '../Dashboard'\nimport {Button} from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport CrewCard from '../../cards/CrewCard'\nimport ReviewCard from '../../cards/ReviewCard'\nimport AddReviewForm from '../../forms/AddReviewForm'\n\nexport default function ProgramDetails(props) {\n    var Uid = props.location.state['Uid']\n    //Need to pass in email of user logged in \n    var userEmail = 'michael.miller@email.com'\n\n    const [addReviewBtn, setAddReviewBtn] = useState(false); \n    const [programDetails, setProgramDetails] = useState([]);\n    const [programCrew, setProgramCrew] = useState([]); \n    const [programReviews, setProgramReviews] = useState([]); \n\n    const [userFavPrograms, setUserFavPrograms] = useState([]); \n    //React JS - Toggle button: https://www.youtube.com/watch?v=artRW0PdPIY \n    var favPrograms = []\n    console.log(programDetails)\n\n    /**API call to get all details of a program and will split and store into three separate arrays. */\n    useEffect(()=>{\n        fetch(`/programdetails?Uid=${Uid}`).then(response => \n            response.json()).then(data => { \n                setProgramDetails([data['programinfo']]); \n                setProgramCrew(data['programcrew'])\n                setProgramReviews(data['programreviews'])\n                //console.log(props.location.state); \n                //console.log(props.location.state['state'])\n            }); \n    }, []); \n\n    /**Geting all programs that the user has favourited used to set the content of the favourite button */\n    useEffect(()=>{\n        fetch(`/userfavs?Email=${userEmail}`).then(response => \n            response.json()).then(data => { \n                setUserFavPrograms([...data['favouriteshows'], ...data['favouritemovies']])\n                console.log(userFavPrograms)\n                //console.log(favObj)\n                //console.log(favPrograms)\n                //console.log(favPrograms)\n                //console.log(props.location.state['state'])\n            }); \n    }, []); \n\n    /**Getting the Uid of all the user favourited movies */\n    for (var i=0; i<userFavPrograms.length; i++){\n        favPrograms.push({Uid: userFavPrograms[i]['Uid']})\n    }\n    console.log(favPrograms)\n    //console.log(favPrograms)\n    //var initial = true; \n    var initial; \n        if (favPrograms.some(favs => favs.Uid === Uid)){\n            console.log(\"HIIII IM HEREEEEEE\") \n            initial = true\n        }\n        else {\n            initial = false\n            console.log(\"NOTTTT HEREEEEEE\") \n        }\n    const [toggle, setToggle] = useState(true)\n    //console.log(init())\n    //const [toggle, setToggle] = useState(() \n    console.log(toggle)\n    /**if (favPrograms.includes(Uid)){\n            console.log(\"HIIII IM HEREEEEEE\")\n            return false\n            //console.log(favBtnStatus)\n        }\n        else {\n            console.log(true)\n            return true\n           // console.log(favBtnStatus)\n        } */ \n   //console.log(toggle)\n\n    /** Favourite button even handler (handling button click) */\n    async function addOrRemoveFavourite(){\n        /*Reuqest to add to user reviews  */\n        if (toggle == false){ \n            //console.log('Will add to favourites')\n            const request = {\n                method: 'POST', \n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ Email: userEmail,  Uid: Uid, Cid: ''})\n            }\n            console.log(request)\n            const response = await fetch('/userfavs', request); \n            if (response.ok){\n                console.log('Added to favourites added')\n                alert('Program has been successfully added to your favourites')   \n                //favBtnStatus = 'Add To Favourites'     \n            } else{\n                console.log('Not successful')\n            }\n            console.log(Uid)\n        }\n        else{\n            console.log('Remove from favourites')\n            console.log(Uid)\n            const request = {\n                method: 'DELETE', \n                headers: { 'Content-Type': 'application/json' },\n            }\n            const response = await fetch(`/userfavs?Email=${userEmail}&Uid=${Uid}`, request); \n            if (response.ok){\n                console.log('Removed from favourtes')\n                alert('Program has been successfully removed from your favourites')\n                console.log(response)\n                //favBtnStatus = 'Add To Favourites'\n            } else{\n                console.log('Remove not successful')\n            }\n            //favBtnStatus = 'Add To Favourites'\n        } \n        setToggle(!toggle)\n        console.log(toggle)\n    }\n\n    return (\n        <>\n            <Dashboard/>\n            <h1></h1>\n            {programDetails.map(details => {\n                if (details.Type == 'Movie'){\n                    return (\n                        <div>\n                        <Top>\n                            <Image><img style={{width: \"250px\", height: \"350px\"}} src={details.Image} alt=\"\"/></Image>\n                            <div style={{marginLeft: \"50px\"}}>\n                                <Title><h1>{details.Name}</h1></Title>\n                                <div>\n                                    <Text><h3>Type: {details.Type}</h3></Text>\n                                    <Text><h3>Age-Rating: {details.Age_rating}</h3></Text>\n                                    <Text><h3>Year: {details.Year}</h3></Text>\n                                    <Text><h3>Genre: {details.Genre}</h3></Text>\n                                    <Text><h3>Language: English</h3></Text>\n                                    <Text><h3>Duration: {details.Run_time}</h3></Text>\n                                    <Text><h3>Arrival Date: {details.Arrival_month} {details.Arrival_day}, {details.Arrival_year}</h3></Text>\n                                    <Text><h3>Departure Date: {details.Departure_month} {details.Departure_day}, {details.Departure_year}</h3></Text>\n                                </div>\n                            </div>\n                        </Top>\n                        <Container>\n                            <div style={{marginTop: \"50px\"}}>\n                                <RatingText><h3>Rating: {details.User_rating}/10</h3></RatingText>\n                                <AddFavBtn><Button onClick={addOrRemoveFavourite}>{toggle ? \"Remove From Favourites\" : \"Add To Favourites\"}</Button></AddFavBtn>\n                            </div>\n                            <div style={{marginLeft: \"-280px\", marginTop: \"30px\"}}>\n                                <h3 style={{marginLeft: \"380px\"}}>Streaming Service:</h3>\n                                <Box style={{marginTop: \"0px\"}}>\n                                    <Top>\n                                        <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"-160px\", marginTop: \"-50px\"}} src={details.Logo} alt=\"\"/>   \n                                        <div>\n                                            <Text style={{marginLeft: \"20px\", marginTop: \"-35px\"}}><h3>{details.Service_name}</h3></Text>\n                                        </div>\n                                    </Top>\n                                </Box>\n                            </div>\n                        </Container>\n                        <Header><h2>Synopsis</h2></Header>\n                        <SynopText>\n                            <h4>{details.Description}</h4>\n                        </SynopText>\n                        <Header><h2>Crew</h2></Header>\n                        <Scroll><CrewCard programCrew={programCrew}/></Scroll>\n                        <Header><h2>Reviews <AddRevBtn><Button onClick={() => setAddReviewBtn(true)}>Add Review</Button></AddRevBtn></h2></Header>  \n                        <ReviewCard programReviews={programReviews}/>\n                        {/*References opening a review popup form: Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */}\n                        <AddReviewForm trigger={addReviewBtn} setTrigger={setAddReviewBtn} Uid={Uid} userEmail={userEmail} onAddedReview={newReview => setProgramReviews(currentReviews => [...currentReviews, newReview])}/>\n                    </div>\n                )}\n                else if(details.Type == 'TV Show'){\n                    return(\n                        <div>\n                <Top>\n                    <Image><img style={{width: \"250px\", height: \"350px\"}} src={details.Image} alt=\"\"/></Image>\n                    <div style={{marginLeft: \"50px\"}}>\n                        <Title><h1>{details.Name}</h1></Title>\n                        <div>\n                            <Text><h3>Type: {details.Type}</h3></Text>\n                            <Text><h3>Age-Rating: {details.Age_rating}</h3></Text>\n                            <Text><h3>Year: {details.Year}</h3></Text>\n                            <Text><h3>Genre: {details.Genre}</h3></Text>\n                            <Text><h3>Language: English</h3></Text>\n                            <Text><h3>Number of Seasons: {details.No_of_seasons}</h3></Text>\n                            <Text><h3>Arrival Date: {details.Arrival_month} {details.Arrival_day}, {details.Arrival_year}</h3></Text>\n                            <Text><h3>Departure Date: {details.Departure_month} {details.Departure_day}, {details.Departure_year}</h3></Text>\n                        </div>\n                    </div>\n                </Top>\n                <Container>\n                    <div style={{marginTop: \"50px\"}}>\n                        <RatingText><h3>Rating: {details.User_rating}/10</h3></RatingText>\n                        <AddFavBtn><Button onClick={addOrRemoveFavourite}>{toggle ? \"Remove From Favourites\" : \"Add To Favourites\"}</Button></AddFavBtn>\n                    </div>\n                    <div style={{marginLeft: \"-280px\", marginTop: \"30px\"}}>\n                        <h3 style={{marginLeft: \"380px\"}}>Streaming Service:</h3>\n                        <Box style={{marginTop: \"0px\"}}>\n                            <Top>\n                                <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"-160px\", marginTop: \"-50px\"}} src={details.Logo} alt=\"\"/>   \n                                <div>\n                                    <Text style={{marginLeft: \"20px\", marginTop: \"-35px\"}}><h3>{details.Service_name}</h3></Text>\n                                </div>\n                            </Top>\n                        </Box>\n                    </div>\n                </Container>\n                <Header><h2>Synopsis</h2></Header>\n                <SynopText>\n                    <h4>{details.Description}</h4>\n                </SynopText>\n                <Header><h2>Crew</h2></Header>\n                <Scroll><CrewCard programCrew={programCrew}/></Scroll>\n                <Header><h2>Reviews <AddRevBtn><Button onClick={() => setAddReviewBtn(true)}>Add Review</Button></AddRevBtn></h2></Header>\n                <ReviewCard programReviews={programReviews}/>\n                <AddReviewForm trigger={addReviewBtn} setTrigger={setAddReviewBtn} Uid={Uid} userEmail={userEmail} onAddedReview={newReview => setProgramReviews(currentReviews => [...currentReviews, newReview])}/>\n            </div>\n            )}})}\n        </>\n    )\n}\n\nconst Box = styled.div`\n    margin-top: 30px; \n    margin-bottom: 20px; \n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-item: center; \n    border-radius: 10px;\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \n    margin-left: 400px; \n    background: #E0E8E4;\n    height: 100px; \n    width: 300px; \n`\n\nconst Top = styled.div`\n    display: flex; \n    margin-top: 50px;\n    margin-left: 180px; \n`\n\nconst Container = styled.div`\n    display: flex; \n    margin-top: -40px;\n    margin-left: 10px; \n`\n\nconst Title = styled.div `\n    margin-right: 0px; \n    margin-bottom: 20px; \n`\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 30px;\n`\nconst Image = styled.div`\n    margin-left: 90px; \n    margin-right: 0px; \n`\nconst AddFavBtn = styled.div `\n    margin-left: 270px; \n    margin-top: 20px;\n`\n\nconst AddRevBtn = styled.div `\n    margin-left: 750px; \n`\n\n/*\n * References: \n * Making Scrollable sections within a page: \n *      How To Make A Div Vertically Scrollable Using CSS https://www.youtube.com/watch?v=uB1KzjV0IhM \n */\nconst Scroll = styled.div`\n    height: 300px; \n    padding-bottom: 50px; \n    overflow: hidden; \n    overflow-y: auto; \n`\n\nconst RatingText = styled.div `\n    margin-left: 270px; \n    margin-top: 20px;\n`\n\nconst Text = styled.div `\n    margin-left: 30px; \n    margin-top: 0px; \n    margin-bottom: 10px; \n`\n\nconst SynopText = styled.div `\n    margin-left: 270px; \n    margin-top: 10px; \n    width: 1010px; \n    display: flex; \n    justify-content: space-around; \n`","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/Movies.js",["156","157"],"import React, { useEffect, useState } from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport Dashboard from '../Dashboard'\nimport ProgramCard from '../../cards/ProgramCard'\nimport styled from 'styled-components'\n\nexport default function Movies() {\n    //Need to pass in email of user logged in \n    const user = firebase.auth().currentUser;\n    var email = user.email\n    var userEmail = 'jonathan.smith@email.com'\n    /**\n     * References: \n     *  * How to call an api endpoint and get the data to pass to Program card component \n     *      * How to Call a Flask API in React https://www.youtube.com/watch?v=06pWsB_hoD4&t=0s\n     */\n    const [programs, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetch(`/programs?Type=Movie&Email=${userEmail}`).then(response =>\n            response.json()).then(data => {\n                setMovies(data);\n            });\n    }, []);\n\n    return (\n        <>\n            <Dashboard />\n            <Header>\n                <h1 className=\"pageHeader\">Movies</h1>\n            </Header>\n            {/*Passing the object to the ProgramCard component*/}\n            <ProgramCard programs={programs} />\n        </>\n    )\n}\n\nconst Header = styled.div`\n    margin-left: 240px; \n    margin-top: 10px;\n`\n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/firebase.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/SideBarItem.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/CrewCard.js",["158"],"import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom';\nimport './Card.css'\n\n\nexport default function CrewCard({programCrew}){\n    let history = useHistory();\n\n    /**\n     * References: \n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \n     * To populate each card with information from card content object: \n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\n     */\n    const renderCard = (card, index) => {\n        return (\n            <Card style={{ width: '10rem'}} key={index} className=\"cCard\">\n                <Card.Img variant=\"top\" src={card.Image} style={{height: \"200px\"}} onClick={() => history.push('/crewdetails', {Cid: card.Cid})}/>\n                <Card.Body onClick={() => history.push('/crewdetails', {Cid: card.Cid})}>\n                    <Card.Text style={{height: '0rem', marginLeft:'-10px'}} className=\"cardTitle\">{card.Name}</Card.Text>\n                </Card.Body>\n            </Card>\n        ); \n    }; \n    return <div className=\"grid\">{programCrew && programCrew.map(renderCard)}</div>; \n}; \n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ProgramCard.js",["159","160","161"],"import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport './Card.css'\n\nexport default function ProgramCard({programs}){\n    let history = useHistory(); \n    /**\n     * References: \n     * To create individual cards: https://react-bootstrap.github.io/components/cards/ \n     * To populate each card with information from card content object: \n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\n     * To pass Uid of card to the more details page: How to pass props with react-router using onClick methods\n     *  https://stackoverflow.com/questions/54083066/how-to-pass-props-with-react-router-using-onclick-methods\n    */ \n    const renderCard = (card, index) => {\n        return (                \n            <img className=\"pCard\" src={card.Image} onClick={() => history.push('/programdetails', {Uid: card.Uid})}/>                      \n        ); \n    }; \n    return (\n        <div className=\"grid\">\n            {programs && programs.map(renderCard)}       \n        </div>\n        ); \n}; \n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/SubCard.js",["162","163"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport default function SubCard({services, userEmail, onRemovedService}){\n    var Email = userEmail\n\n    async function removeService(serviceName){\n        const request = {\n            method: 'DELETE', \n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ Email: userEmail, Service_name: serviceName})\n        }\n        const response = await fetch('/usersubscriptions', request); \n        if (response.ok){\n            console.log('Service has been removed')\n            alert('Service has been successfully removed')\n            onRemovedService(serviceName)\n        } else{\n            console.log('Not successful')\n        }\n    }\n    /**\n     * References: \n     * To populate each card with information from card content object: \n     *      Dynamically Create Cards In ReactJS Using React-Bootstrap https://www.youtube.com/watch?v=IhWFs0diAPE\n     */\n    const renderCard = (card, index) => {\n        return (\n            <div>\n                <Box>\n                    <Top>\n                        <img style={{width: \"60px\", height: \"60px\", borderRadius: \"10px\", marginLeft: \"15px\", marginTop: \"10px\"}} src={card.Logo} alt=\"\"/>   \n                        <div>\n                            <h3 style={{marginTop: \"15px\", marginLeft: \"15px\", marginBottom: \"0px\"}}>{card.Service_name}</h3>\n                            <Text>\n                                <h6>{card.Location}</h6>\n                                <h6>{card.Price} /month</h6>\n                            </Text>\n                        </div>\n                    </Top>\n                    <RemoveLink><Link onClick={() => removeService(card.Service_name)}>Remove Subscription</Link></RemoveLink>\n                </Box>\n            </div>\n        ); \n    }; \n    return <div>{services.map(renderCard)}</div>; \n}; \n\n/*\n * References: \n *  To create box for every subscription service: \n *      Build a Recipe App With React | React Tutorial For Beginners https://www.youtube.com/watch?v=U9T6YkEDkMo&list=PLDyQo7g0_nsVHmyZZpVJyFn5ojlboVEhE&index=2 */\nconst Box = styled.div`\n    margin-top: 30px; \n    margin-bottom: 20px; \n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-item: center; \n    border-radius: 10px;\n    box-shadow: 0px 12px 18px -6px rgba(0, 0, 0, 0.3);  \n    margin-left: 400px; \n    background: #FAEAE6;\n    height: 140px; \n    width: 800px; \n`\nconst Top = styled.div`\n    display: flex;  \n    margin-bottom: 0px; \n`\nconst Text = styled.div`\n    margin-left: 30px; \n    margin-top: 15px; \n`\n/**650 */\nconst RemoveLink = styled(Link) `\n    margin-left: 650px; \n`","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/cards/ReviewCard.js",[],"/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/forms/AddServiceForm.js",["164","165","166","167","168","169"],"import React, {useState, useEffect} from 'react'\nimport {Button} from 'react-bootstrap'\nimport styled from 'styled-components'\nimport {Form, Select} from 'semantic-ui-react'\n\nexport default function AddServiceForm(props){\n    var Email = props.userEmail\n    var allServices = props.allServices\n    var userServices = props.userServices\n    var selectOptions = []\n\n    const [service, setService] = useState('')\n\n    /* Generating the list of services the user can add. \n       References: \n        * Checking if an a certain value is within in any of the objects in the array list \n            * https://www.tutorialrepublic.com/faq/how-to-check-if-an-array-includes-an-object-in-javascript.php */\n    for (var i=0; i<allServices.length; i++){\n        if (!(userServices.some(userServices => userServices.Service_name === allServices[i]['Service_name']))){\n            var newObj = {key: allServices[i]['Sid'], text: allServices[i]['Service_name'], value: allServices[i]['Sid']}\n            selectOptions.push(newObj)\n        }\n    }\n\n    function closeReview(){\n        props.setTrigger(false)\n        setService('')\n    }\n    var serviceAdded = allServices.find(object => object.Service_name == service)\n    console.log(serviceAdded)\n    /*\n     * Creating request object and getting reponse from API after adding a user review to a certain movie \n     * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\n     */\n    async function addService(){\n        console.log(service)\n        \n        if (service == ''){\n            alert('Error! Please select a service from the list')\n        } \n        else{\n            const request = {\n                method: 'POST', \n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ Email: Email, Service_name: service})\n            }\n            const response = await fetch('/usersubscriptions', request); \n            if (response.ok){\n                console.log('Service added')\n                var serviceAdded = allServices.find(object => object.Service_name == service)\n                props.onAddedService(serviceAdded)\n                selectOptions.filter(selectOptions=>selectOptions.Id!=service)\n                props.setTrigger(false)\n                setService('')  \n            } else{\n                console.log('Not successful')\n            }\n        }    \n    }\n    /*References: \n        * Creating a add review popup form where users can add a review: \n            * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\n    return (props.trigger)?(\n        <Popup>\n            <ServiceForm>\n                <Form>\n                    <Top>\n                        <h2>Add a service</h2>\n                        <CloseBtn><Button variant=\"default\"style={{background: \"#9FFFCB\"}} onClick={closeReview}>X</Button></CloseBtn>\n                    </Top>\n                    <Select style={{marginLeft: \"20px\", width: \"250px\"}} options={selectOptions} placeholder='Select Service' onChange={event => setService(event.target.textContent)}/>\n                    <SubmitBtn><Button variant=\"default\"style={{background: \"#9FFFCB\" }} onClick={addService}>Add</Button></SubmitBtn>\n                </Form>\n                {props.children}    \n            </ServiceForm>             \n        </Popup>\n    ) : \"\"; \n}; \n\nconst Popup = styled.div `\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    position: fixed; \n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100vh;  \n    background-color: rgba(0, 0, 0, 0.2);\n`\n\nconst ServiceForm = styled.div `\n    position: relative; \n    width: 400px; \n    padding: 10px;  \n    background-color: white; \n    border-radius: 10px;\n`\n\nconst Top = styled.div`\n    display: flex;  \n    margin-bottom: 0px; \n`\n\nconst CloseBtn = styled.div`\n    margin-top: 0px; \n    margin-bottom: 10px;  \n    margin-left: 200px;   \n`\nconst SubmitBtn = styled.div`\n    margin-top = 10px;  \n    margin-left: 320px;\n`","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/forms/AddReviewForm.js",["170"],"import React, {useState} from 'react'\nimport {Button} from 'react-bootstrap'\nimport styled from 'styled-components'\nimport {Form, Input, Rating} from 'semantic-ui-react'\n\nexport default function AddReviewForm(props){\n    const [userRating, setUserRating] = useState(0)\n    const [review, setReview] = useState('')\n    var obj; \n    var Uid = props.Uid\n    var Email = props.userEmail \n\n    function closeReview(){\n        props.setTrigger(false)\n        setUserRating(0)\n        setReview('') \n    }\n\n    /*\n     * Creating request object and getting reponse from API after adding a user review to a certain movie \n     * Flask Movie API Example: https://www.youtube.com/watch?v=Urx8Kj00zsI\n     */\n    async function submitReview(){\n        if (review == ''){\n            console.log('error! Description cannot be empty')\n            alert('Description field cannot be empty!')\n        } \n        else{\n            const request = {\n                method: 'POST', \n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ Uid: Uid, Email: Email, Rating: userRating, Description: review})\n            }\n            // Referenced: Handling response status using fetch in react JS\n            await fetch('/userreview', request).then(response => {\n                if (response.ok){\n                    return response.json()\n                }\n            }).then(data => { \n                console.log(data)\n                obj = data\n                }); \n            props.onAddedReview({Author: obj['Username'], Date: obj['Date'], Description: review, Rating: userRating})\n            props.setTrigger(false)\n            setUserRating(0)\n            setReview('')   \n        }    \n    }\n    /*References: \n        * Creating a add review popup form where users can add a review: \n            * Build a POPUP component in React JS ~ A Beginner Tutorial with React https://www.youtube.com/watch?v=i8fAO_zyFAM */\n    return (props.trigger)?(\n        <Popup>\n            <ReviewForm>\n                <Form>\n                    <CloseBtn><Button variant=\"default\"style={{background: \"#9FFFCB\"}} onClick={closeReview}>X</Button></CloseBtn>\n                    <Form.Field>\n                        <Rating icon='star' maxRating={5} value={userRating} onRate={(_, data) => {setUserRating(data.rating)}}/> \n                    </Form.Field>\n                    <Form.Field>\n                        <Input placeholder=\"Write your review here\" value={review} onChange={event => setReview(event.target.value)}/>\n                    </Form.Field>\n                    <SubmitBtn><Button variant=\"default\"style={{background: \"#9FFFCB\" }} onClick={submitReview}>Submit</Button></SubmitBtn>\n                </Form>\n                {props.children}    \n            </ReviewForm>             \n        </Popup>\n    ) : \"\"; \n}; \n\nconst Popup = styled.div `\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    position: fixed; \n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100vh;  \n    background-color: rgba(0, 0, 0, 0.2);\n`\n\nconst ReviewForm = styled.div `\n    position: relative; \n    width: 700px; \n    padding: 10px;  \n    background-color: white; \n    border-radius: 10px;\n`\n\nconst CloseBtn = styled.div`\n    margin-top: 0px; \n    margin-bottom: 10px;  \n    margin-left: 645px;   \n`\nconst SubmitBtn = styled.div`\n    margin-top = 10px;  \n    margin-left: 600px;\n`\n","/Users/nolan/Documents/Software Dev/CPSC471 Project/src/components/dashboard/pages/ProfileEdit.js",["171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":7,"column":8,"nodeType":"180","messageId":"181","endLine":7,"endColumn":17},{"ruleId":"178","severity":1,"message":"182","line":5,"column":17,"nodeType":"180","messageId":"181","endLine":5,"endColumn":22},{"ruleId":"178","severity":1,"message":"183","line":12,"column":13,"nodeType":"180","messageId":"181","endLine":12,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":28,"column":8,"nodeType":"186","endLine":28,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":41,"column":159,"nodeType":"190","messageId":"191","endLine":41,"endColumn":161},{"ruleId":"178","severity":1,"message":"192","line":9,"column":10,"nodeType":"180","messageId":"181","endLine":9,"endColumn":17},{"ruleId":"178","severity":1,"message":"193","line":17,"column":12,"nodeType":"180","messageId":"181","endLine":17,"endColumn":16},{"ruleId":"178","severity":1,"message":"194","line":17,"column":18,"nodeType":"180","messageId":"181","endLine":17,"endColumn":25},{"ruleId":"178","severity":1,"message":"195","line":18,"column":12,"nodeType":"180","messageId":"181","endLine":18,"endColumn":20},{"ruleId":"178","severity":1,"message":"196","line":18,"column":22,"nodeType":"180","messageId":"181","endLine":18,"endColumn":33},{"ruleId":"178","severity":1,"message":"197","line":19,"column":12,"nodeType":"180","messageId":"181","endLine":19,"endColumn":17},{"ruleId":"178","severity":1,"message":"198","line":19,"column":19,"nodeType":"180","messageId":"181","endLine":19,"endColumn":27},{"ruleId":"178","severity":1,"message":"199","line":20,"column":12,"nodeType":"180","messageId":"181","endLine":20,"endColumn":15},{"ruleId":"178","severity":1,"message":"200","line":20,"column":17,"nodeType":"180","messageId":"181","endLine":20,"endColumn":23},{"ruleId":"178","severity":1,"message":"201","line":21,"column":12,"nodeType":"180","messageId":"181","endLine":21,"endColumn":18},{"ruleId":"178","severity":1,"message":"202","line":21,"column":20,"nodeType":"180","messageId":"181","endLine":21,"endColumn":29},{"ruleId":"178","severity":1,"message":"203","line":22,"column":12,"nodeType":"180","messageId":"181","endLine":22,"endColumn":20},{"ruleId":"178","severity":1,"message":"204","line":22,"column":22,"nodeType":"180","messageId":"181","endLine":22,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":31,"column":8,"nodeType":"186","endLine":31,"endColumn":10,"suggestions":"205"},{"ruleId":"178","severity":1,"message":"206","line":113,"column":7,"nodeType":"180","messageId":"181","endLine":113,"endColumn":11},{"ruleId":"178","severity":1,"message":"207","line":133,"column":7,"nodeType":"180","messageId":"181","endLine":133,"endColumn":15},{"ruleId":"178","severity":1,"message":"208","line":136,"column":7,"nodeType":"180","messageId":"181","endLine":136,"endColumn":11},{"ruleId":"184","severity":1,"message":"185","line":21,"column":8,"nodeType":"186","endLine":21,"endColumn":10,"suggestions":"209"},{"ruleId":"184","severity":1,"message":"210","line":22,"column":8,"nodeType":"186","endLine":22,"endColumn":10,"suggestions":"211"},{"ruleId":"184","severity":1,"message":"185","line":22,"column":8,"nodeType":"186","endLine":22,"endColumn":10,"suggestions":"212"},{"ruleId":"184","severity":1,"message":"213","line":34,"column":8,"nodeType":"186","endLine":34,"endColumn":10,"suggestions":"214"},{"ruleId":"184","severity":1,"message":"215","line":47,"column":8,"nodeType":"186","endLine":47,"endColumn":10,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"217","line":62,"column":13,"nodeType":"180","messageId":"181","endLine":62,"endColumn":20},{"ruleId":"188","severity":1,"message":"218","line":84,"column":20,"nodeType":"190","messageId":"191","endLine":84,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":127,"column":13,"nodeType":"221","endLine":127,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":128,"column":41,"nodeType":"224","messageId":"225","endLine":128,"endColumn":43},{"ruleId":"188","severity":1,"message":"218","line":129,"column":34,"nodeType":"190","messageId":"191","endLine":129,"endColumn":36},{"ruleId":"188","severity":1,"message":"218","line":177,"column":38,"nodeType":"190","messageId":"191","endLine":177,"endColumn":40},{"ruleId":"178","severity":1,"message":"197","line":12,"column":9,"nodeType":"180","messageId":"181","endLine":12,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":26,"column":8,"nodeType":"186","endLine":26,"endColumn":10,"suggestions":"226"},{"ruleId":"178","severity":1,"message":"227","line":2,"column":15,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"228","line":2,"column":9,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"178","severity":1,"message":"227","line":2,"column":15,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":18,"column":13,"nodeType":"221","endLine":18,"endColumn":119},{"ruleId":"178","severity":1,"message":"231","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"232","line":6,"column":9,"nodeType":"180","messageId":"181","endLine":6,"endColumn":14},{"ruleId":"178","severity":1,"message":"233","line":1,"column":26,"nodeType":"180","messageId":"181","endLine":1,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":19,"column":33,"nodeType":"224","messageId":"236","endLine":19,"endColumn":109},{"ruleId":"188","severity":1,"message":"218","line":29,"column":71,"nodeType":"190","messageId":"191","endLine":29,"endColumn":73},{"ruleId":"188","severity":1,"message":"218","line":38,"column":21,"nodeType":"190","messageId":"191","endLine":38,"endColumn":23},{"ruleId":"188","severity":1,"message":"218","line":50,"column":83,"nodeType":"190","messageId":"191","endLine":50,"endColumn":85},{"ruleId":"188","severity":1,"message":"189","line":52,"column":69,"nodeType":"190","messageId":"191","endLine":52,"endColumn":71},{"ruleId":"188","severity":1,"message":"218","line":24,"column":20,"nodeType":"190","messageId":"191","endLine":24,"endColumn":22},{"ruleId":"178","severity":1,"message":"237","line":26,"column":19,"nodeType":"180","messageId":"181","endLine":26,"endColumn":27},{"ruleId":"178","severity":1,"message":"238","line":28,"column":11,"nodeType":"180","messageId":"181","endLine":28,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":36,"column":8,"nodeType":"186","endLine":36,"endColumn":10,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userEmail'. Either include it or remove the dependency array.","ArrayExpression",["242"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Details' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'gender' is assigned a value but never used.","'setGender' is assigned a value but never used.","'language' is assigned a value but never used.","'setLanguage' is assigned a value but never used.",["243"],"'Box2' is assigned a value but never used.","'EditLink' is assigned a value but never used.","'Info' is assigned a value but never used.",["244"],"React Hook useEffect has missing dependencies: 'Cid' and 'props.location.state'. Either include them or remove the dependency array.",["245"],["246"],"React Hook useEffect has a missing dependency: 'Uid'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'userEmail' and 'userFavPrograms'. Either include them or remove the dependency array.",["248"],"'initial' is assigned a value but never used.","Expected '===' and instead saw '=='.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["249"],"'Button' is defined but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'Email' is assigned a value but never used.","'useEffect' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'setError' is assigned a value but never used.","'history' is assigned a value but never used.",["250"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},{"desc":"251","fix":"254"},{"desc":"255","fix":"256"},{"desc":"251","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"251","fix":"262"},{"desc":"251","fix":"263"},"Update the dependencies array to be: [userEmail]",{"range":"264","text":"265"},{"range":"266","text":"265"},{"range":"267","text":"265"},"Update the dependencies array to be: [Cid, props.location.state]",{"range":"268","text":"269"},{"range":"270","text":"265"},"Update the dependencies array to be: [Uid]",{"range":"271","text":"272"},"Update the dependencies array to be: [userEmail, userFavPrograms]",{"range":"273","text":"274"},{"range":"275","text":"265"},{"range":"276","text":"265"},[947,949],"[userEmail]",[991,993],[780,782],[828,830],"[Cid, props.location.state]",[822,824],[1482,1484],"[Uid]",[2071,2073],"[userEmail, userFavPrograms]",[909,911],[1220,1222]]